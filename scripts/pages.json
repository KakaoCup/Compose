[{"name":"ASSERT","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t/index.html","searchKeys":["ASSERT","ASSERT","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT"]},{"name":"ASSERT_CONTENT_DESCRIPTION_CONTAINS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_CONTENT_DESCRIPTION_CONTAINS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-c-o-n-t-e-n-t_-d-e-s-c-r-i-p-t-i-o-n_-c-o-n-t-a-i-n-s/index.html","searchKeys":["ASSERT_CONTENT_DESCRIPTION_CONTAINS","ASSERT_CONTENT_DESCRIPTION_CONTAINS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_CONTENT_DESCRIPTION_CONTAINS"]},{"name":"ASSERT_CONTENT_DESCRIPTION_EQUALS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_CONTENT_DESCRIPTION_EQUALS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-c-o-n-t-e-n-t_-d-e-s-c-r-i-p-t-i-o-n_-e-q-u-a-l-s/index.html","searchKeys":["ASSERT_CONTENT_DESCRIPTION_EQUALS","ASSERT_CONTENT_DESCRIPTION_EQUALS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_CONTENT_DESCRIPTION_EQUALS"]},{"name":"ASSERT_DOES_NOT_EXIST","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_DOES_NOT_EXIST","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-d-o-e-s_-n-o-t_-e-x-i-s-t/index.html","searchKeys":["ASSERT_DOES_NOT_EXIST","ASSERT_DOES_NOT_EXIST","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_DOES_NOT_EXIST"]},{"name":"ASSERT_EXISTS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_EXISTS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-e-x-i-s-t-s/index.html","searchKeys":["ASSERT_EXISTS","ASSERT_EXISTS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_EXISTS"]},{"name":"ASSERT_HAS_CLICK_ACTION","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_HAS_CLICK_ACTION","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-h-a-s_-c-l-i-c-k_-a-c-t-i-o-n/index.html","searchKeys":["ASSERT_HAS_CLICK_ACTION","ASSERT_HAS_CLICK_ACTION","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_HAS_CLICK_ACTION"]},{"name":"ASSERT_HAS_NO_CLICK_ACTION","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_HAS_NO_CLICK_ACTION","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-h-a-s_-n-o_-c-l-i-c-k_-a-c-t-i-o-n/index.html","searchKeys":["ASSERT_HAS_NO_CLICK_ACTION","ASSERT_HAS_NO_CLICK_ACTION","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_HAS_NO_CLICK_ACTION"]},{"name":"ASSERT_RANGE_INFO_EQUALS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_RANGE_INFO_EQUALS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-r-a-n-g-e_-i-n-f-o_-e-q-u-a-l-s/index.html","searchKeys":["ASSERT_RANGE_INFO_EQUALS","ASSERT_RANGE_INFO_EQUALS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_RANGE_INFO_EQUALS"]},{"name":"ASSERT_TEXT_CONTAINS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_TEXT_CONTAINS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-t-e-x-t_-c-o-n-t-a-i-n-s/index.html","searchKeys":["ASSERT_TEXT_CONTAINS","ASSERT_TEXT_CONTAINS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_TEXT_CONTAINS"]},{"name":"ASSERT_TEXT_EQUALS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_TEXT_EQUALS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-t-e-x-t_-e-q-u-a-l-s/index.html","searchKeys":["ASSERT_TEXT_EQUALS","ASSERT_TEXT_EQUALS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_TEXT_EQUALS"]},{"name":"ASSERT_VALUE_EQUALS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_VALUE_EQUALS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-v-a-l-u-e_-e-q-u-a-l-s/index.html","searchKeys":["ASSERT_VALUE_EQUALS","ASSERT_VALUE_EQUALS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_VALUE_EQUALS"]},{"name":"IS_DISPLAYED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_DISPLAYED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-d-i-s-p-l-a-y-e-d/index.html","searchKeys":["IS_DISPLAYED","IS_DISPLAYED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_DISPLAYED"]},{"name":"IS_ENABLED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_ENABLED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-e-n-a-b-l-e-d/index.html","searchKeys":["IS_ENABLED","IS_ENABLED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_ENABLED"]},{"name":"IS_FOCUSED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_FOCUSED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-f-o-c-u-s-e-d/index.html","searchKeys":["IS_FOCUSED","IS_FOCUSED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_FOCUSED"]},{"name":"IS_NOT_DISPLAYED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_DISPLAYED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-n-o-t_-d-i-s-p-l-a-y-e-d/index.html","searchKeys":["IS_NOT_DISPLAYED","IS_NOT_DISPLAYED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_DISPLAYED"]},{"name":"IS_NOT_ENABLED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_ENABLED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-n-o-t_-e-n-a-b-l-e-d/index.html","searchKeys":["IS_NOT_ENABLED","IS_NOT_ENABLED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_ENABLED"]},{"name":"IS_NOT_FOCUSED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_FOCUSED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-n-o-t_-f-o-c-u-s-e-d/index.html","searchKeys":["IS_NOT_FOCUSED","IS_NOT_FOCUSED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_FOCUSED"]},{"name":"IS_NOT_SELECTED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_SELECTED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-n-o-t_-s-e-l-e-c-t-e-d/index.html","searchKeys":["IS_NOT_SELECTED","IS_NOT_SELECTED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_SELECTED"]},{"name":"IS_OFF","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_OFF","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-o-f-f/index.html","searchKeys":["IS_OFF","IS_OFF","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_OFF"]},{"name":"IS_ON","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_ON","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-o-n/index.html","searchKeys":["IS_ON","IS_ON","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_ON"]},{"name":"IS_SELECTABLE","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_SELECTABLE","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-s-e-l-e-c-t-a-b-l-e/index.html","searchKeys":["IS_SELECTABLE","IS_SELECTABLE","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_SELECTABLE"]},{"name":"IS_SELECTED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_SELECTED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-s-e-l-e-c-t-e-d/index.html","searchKeys":["IS_SELECTED","IS_SELECTED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_SELECTED"]},{"name":"IS_TOGGLEABLE","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_TOGGLEABLE","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-t-o-g-g-l-e-a-b-l-e/index.html","searchKeys":["IS_TOGGLEABLE","IS_TOGGLEABLE","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_TOGGLEABLE"]},{"name":"PERFORM_CLICK","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_CLICK","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-c-l-i-c-k/index.html","searchKeys":["PERFORM_CLICK","PERFORM_CLICK","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_CLICK"]},{"name":"PERFORM_GESTURE","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_GESTURE","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-g-e-s-t-u-r-e/index.html","searchKeys":["PERFORM_GESTURE","PERFORM_GESTURE","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_GESTURE"]},{"name":"PERFORM_IME_ACTION","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_IME_ACTION","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/-p-e-r-f-o-r-m_-i-m-e_-a-c-t-i-o-n/index.html","searchKeys":["PERFORM_IME_ACTION","PERFORM_IME_ACTION","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_IME_ACTION"]},{"name":"PERFORM_SCROLL_TO","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-s-c-r-o-l-l_-t-o/index.html","searchKeys":["PERFORM_SCROLL_TO","PERFORM_SCROLL_TO","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO"]},{"name":"PERFORM_SCROLL_TO_INDEX","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO_INDEX","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-s-c-r-o-l-l_-t-o_-i-n-d-e-x/index.html","searchKeys":["PERFORM_SCROLL_TO_INDEX","PERFORM_SCROLL_TO_INDEX","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO_INDEX"]},{"name":"PERFORM_SCROLL_TO_KEY","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO_KEY","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-s-c-r-o-l-l_-t-o_-k-e-y/index.html","searchKeys":["PERFORM_SCROLL_TO_KEY","PERFORM_SCROLL_TO_KEY","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO_KEY"]},{"name":"PERFORM_SCROLL_TO_NODE","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO_NODE","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-s-c-r-o-l-l_-t-o_-n-o-d-e/index.html","searchKeys":["PERFORM_SCROLL_TO_NODE","PERFORM_SCROLL_TO_NODE","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO_NODE"]},{"name":"PERFORM_SEMANTICS_ACTION","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SEMANTICS_ACTION","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-s-e-m-a-n-t-i-c-s_-a-c-t-i-o-n/index.html","searchKeys":["PERFORM_SEMANTICS_ACTION","PERFORM_SEMANTICS_ACTION","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SEMANTICS_ACTION"]},{"name":"PERFORM_TEXT_CLEARANCE","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_CLEARANCE","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/-p-e-r-f-o-r-m_-t-e-x-t_-c-l-e-a-r-a-n-c-e/index.html","searchKeys":["PERFORM_TEXT_CLEARANCE","PERFORM_TEXT_CLEARANCE","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_CLEARANCE"]},{"name":"PERFORM_TEXT_INPUT","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_INPUT","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/-p-e-r-f-o-r-m_-t-e-x-t_-i-n-p-u-t/index.html","searchKeys":["PERFORM_TEXT_INPUT","PERFORM_TEXT_INPUT","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_INPUT"]},{"name":"PERFORM_TEXT_INPUT_SELECTION","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_INPUT_SELECTION","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/-p-e-r-f-o-r-m_-t-e-x-t_-i-n-p-u-t_-s-e-l-e-c-t-i-o-n/index.html","searchKeys":["PERFORM_TEXT_INPUT_SELECTION","PERFORM_TEXT_INPUT_SELECTION","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_INPUT_SELECTION"]},{"name":"PERFORM_TEXT_REPLACEMENT","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_REPLACEMENT","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/-p-e-r-f-o-r-m_-t-e-x-t_-r-e-p-l-a-c-e-m-e-n-t/index.html","searchKeys":["PERFORM_TEXT_REPLACEMENT","PERFORM_TEXT_REPLACEMENT","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_REPLACEMENT"]},{"name":"PERFORM_TOUCH_INPUT","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_TOUCH_INPUT","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-t-o-u-c-h_-i-n-p-u-t/index.html","searchKeys":["PERFORM_TOUCH_INPUT","PERFORM_TOUCH_INPUT","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_TOUCH_INPUT"]},{"name":"public @interface ComposeMarker","description":"io.github.kakaocup.compose.node.core.ComposeMarker","location":"compose/io.github.kakaocup.compose.node.core/-compose-marker/index.html","searchKeys":["ComposeMarker","public @interface ComposeMarker","io.github.kakaocup.compose.node.core.ComposeMarker"]},{"name":"public BaseNode<T> BaseNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction)","description":"io.github.kakaocup.compose.node.core.BaseNode.BaseNode","location":"compose/io.github.kakaocup.compose.node.core/-base-node/-base-node.html","searchKeys":["BaseNode","public BaseNode<T> BaseNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction)","io.github.kakaocup.compose.node.core.BaseNode.BaseNode"]},{"name":"public BaseNode<T> BaseNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher)","description":"io.github.kakaocup.compose.node.core.BaseNode.BaseNode","location":"compose/io.github.kakaocup.compose.node.core/-base-node/-base-node.html","searchKeys":["BaseNode","public BaseNode<T> BaseNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher)","io.github.kakaocup.compose.node.core.BaseNode.BaseNode"]},{"name":"public BaseNode<T> BaseNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode)","description":"io.github.kakaocup.compose.node.core.BaseNode.BaseNode","location":"compose/io.github.kakaocup.compose.node.core/-base-node/-base-node.html","searchKeys":["BaseNode","public BaseNode<T> BaseNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode)","io.github.kakaocup.compose.node.core.BaseNode.BaseNode"]},{"name":"public ComposeDelegate ComposeDelegate(NodeProvider nodeProvider, ComposeDelegate parentDelegate)","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.ComposeDelegate","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/-compose-delegate.html","searchKeys":["ComposeDelegate","public ComposeDelegate ComposeDelegate(NodeProvider nodeProvider, ComposeDelegate parentDelegate)","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.ComposeDelegate"]},{"name":"public ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.node.core.BaseNode.getDelegate","location":"compose/io.github.kakaocup.compose.node.core/-base-node/get-delegate.html","searchKeys":["getDelegate","public ComposeDelegate getDelegate()","io.github.kakaocup.compose.node.core.BaseNode.getDelegate"]},{"name":"public ComposeInteraction ComposeInteraction(NodeProvider nodeProvider)","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.ComposeInteraction","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/-compose-interaction.html","searchKeys":["ComposeInteraction","public ComposeInteraction ComposeInteraction(NodeProvider nodeProvider)","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.ComposeInteraction"]},{"name":"public ComposeInteraction getInteraction()","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getInteraction","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/get-interaction.html","searchKeys":["getInteraction","public ComposeInteraction getInteraction()","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getInteraction"]},{"name":"public ComposeScreen<T> ComposeScreen(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction)","description":"io.github.kakaocup.compose.node.element.ComposeScreen.ComposeScreen","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/-compose-screen.html","searchKeys":["ComposeScreen","public ComposeScreen<T> ComposeScreen(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction)","io.github.kakaocup.compose.node.element.ComposeScreen.ComposeScreen"]},{"name":"public ComposeScreen<T> ComposeScreen(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher)","description":"io.github.kakaocup.compose.node.element.ComposeScreen.ComposeScreen","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/-compose-screen.html","searchKeys":["ComposeScreen","public ComposeScreen<T> ComposeScreen(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher)","io.github.kakaocup.compose.node.element.ComposeScreen.ComposeScreen"]},{"name":"public Function0<Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction>> getGlobalInterceptor()","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getGlobalInterceptor","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/get-global-interceptor.html","searchKeys":["getGlobalInterceptor","public Function0<Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction>> getGlobalInterceptor()","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getGlobalInterceptor"]},{"name":"public Function0<Iterable<Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction>>> getNodeInterceptors()","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getNodeInterceptors","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/get-node-interceptors.html","searchKeys":["getNodeInterceptors","public Function0<Iterable<Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction>>> getNodeInterceptors()","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getNodeInterceptors"]},{"name":"public Interception<T> Interception<T extends Any>(Boolean isOverride, T interceptor)","description":"io.github.kakaocup.compose.intercept.base.Interception.Interception","location":"compose/io.github.kakaocup.compose.intercept.base/-interception/-interception.html","searchKeys":["Interception","public Interception<T> Interception<T extends Any>(Boolean isOverride, T interceptor)","io.github.kakaocup.compose.intercept.base.Interception.Interception"]},{"name":"public Interceptor.Builder<INTERACTION, ASSERTION, ACTION> Interceptor.Builder()","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Builder.Interceptor.Builder","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-builder/-interceptor.-builder.html","searchKeys":["Builder","public Interceptor.Builder<INTERACTION, ASSERTION, ACTION> Interceptor.Builder()","io.github.kakaocup.compose.intercept.base.Interceptor.Builder.Interceptor.Builder"]},{"name":"public Interceptor.Configuration Interceptor.Configuration(Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> composeInterceptor)","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Configuration.Interceptor.Configuration","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-configuration/-interceptor.-configuration.html","searchKeys":["Configuration","public Interceptor.Configuration Interceptor.Configuration(Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> composeInterceptor)","io.github.kakaocup.compose.intercept.base.Interceptor.Configuration.Interceptor.Configuration"]},{"name":"public Interceptor.Configurator Interceptor.Configurator()","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Configurator.Interceptor.Configurator","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-configurator/-interceptor.-configurator.html","searchKeys":["Configurator","public Interceptor.Configurator Interceptor.Configurator()","io.github.kakaocup.compose.intercept.base.Interceptor.Configurator.Interceptor.Configurator"]},{"name":"public Interceptor<INTERACTION, ASSERTION, ACTION> Interceptor<INTERACTION extends Any, ASSERTION extends Any, ACTION extends Any>(Interception<Function2<INTERACTION, ASSERTION, Unit>> onCheck, Interception<Function2<INTERACTION, ACTION, Unit>> onPerform, Interception<Function1<INTERACTION, Unit>> onAll)","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Interceptor","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-interceptor.html","searchKeys":["Interceptor","public Interceptor<INTERACTION, ASSERTION, ACTION> Interceptor<INTERACTION extends Any, ASSERTION extends Any, ACTION extends Any>(Interception<Function2<INTERACTION, ASSERTION, Unit>> onCheck, Interception<Function2<INTERACTION, ACTION, Unit>> onPerform, Interception<Function1<INTERACTION, Unit>> onAll)","io.github.kakaocup.compose.intercept.base.Interceptor.Interceptor"]},{"name":"public KIconNode KIconNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode, Boolean useUnmergedTree)","description":"io.github.kakaocup.compose.node.element.KIconNode.KIconNode","location":"compose/io.github.kakaocup.compose.node.element/-k-icon-node/-k-icon-node.html","searchKeys":["KIconNode","public KIconNode KIconNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode, Boolean useUnmergedTree)","io.github.kakaocup.compose.node.element.KIconNode.KIconNode"]},{"name":"public KLazyListItemBuilder KLazyListItemBuilder()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder.KLazyListItemBuilder","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-builder/-k-lazy-list-item-builder.html","searchKeys":["KLazyListItemBuilder","public KLazyListItemBuilder KLazyListItemBuilder()","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder.KLazyListItemBuilder"]},{"name":"public KLazyListItemNode<T> KLazyListItemNode(SemanticsNode semanticNode, SemanticsNodeInteractionsProvider semanticsProvider)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemNode.KLazyListItemNode","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-node/-k-lazy-list-item-node.html","searchKeys":["KLazyListItemNode","public KLazyListItemNode<T> KLazyListItemNode(SemanticsNode semanticNode, SemanticsNodeInteractionsProvider semanticsProvider)","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemNode.KLazyListItemNode"]},{"name":"public KLazyListNode KLazyListNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction, Function1<KLazyListItemBuilder, Unit> itemTypeBuilder, Function1<Integer, SemanticsMatcher> positionMatcher, SemanticsPropertyKey<Integer> lengthSemanticsPropertyKey)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.KLazyListNode","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/-k-lazy-list-node.html","searchKeys":["KLazyListNode","public KLazyListNode KLazyListNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction, Function1<KLazyListItemBuilder, Unit> itemTypeBuilder, Function1<Integer, SemanticsMatcher> positionMatcher, SemanticsPropertyKey<Integer> lengthSemanticsPropertyKey)","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.KLazyListNode"]},{"name":"public KLazyListNode KLazyListNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, Function1<KLazyListItemBuilder, Unit> itemTypeBuilder, Function1<Integer, SemanticsMatcher> positionMatcher, SemanticsPropertyKey<Integer> lengthSemanticsPropertyKey)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.KLazyListNode","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/-k-lazy-list-node.html","searchKeys":["KLazyListNode","public KLazyListNode KLazyListNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, Function1<KLazyListItemBuilder, Unit> itemTypeBuilder, Function1<Integer, SemanticsMatcher> positionMatcher, SemanticsPropertyKey<Integer> lengthSemanticsPropertyKey)","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.KLazyListNode"]},{"name":"public KListItemType<T> KListItemType<T extends KLazyListItemNode<?>>(Function2<SemanticsNode, SemanticsNodeInteractionsProvider, T> provideItem)","description":"io.github.kakaocup.compose.node.element.lazylist.KListItemType.KListItemType","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-list-item-type/-k-list-item-type.html","searchKeys":["KListItemType","public KListItemType<T> KListItemType<T extends KLazyListItemNode<?>>(Function2<SemanticsNode, SemanticsNodeInteractionsProvider, T> provideItem)","io.github.kakaocup.compose.node.element.lazylist.KListItemType.KListItemType"]},{"name":"public KListNode KListNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction, BaseNode<?> parentNode, Boolean useUnmergedTree, Boolean isScrollable, SemanticsPropertyKey<Integer> itemIndexSemanticsPropertyKey, SemanticsPropertyKey<Integer> lengthSemanticsPropertyKey)","description":"io.github.kakaocup.compose.node.element.list.KListNode.KListNode","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/-k-list-node.html","searchKeys":["KListNode","public KListNode KListNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction, BaseNode<?> parentNode, Boolean useUnmergedTree, Boolean isScrollable, SemanticsPropertyKey<Integer> itemIndexSemanticsPropertyKey, SemanticsPropertyKey<Integer> lengthSemanticsPropertyKey)","io.github.kakaocup.compose.node.element.list.KListNode.KListNode"]},{"name":"public KListNode KListNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode, Boolean useUnmergedTree, Boolean isScrollable, SemanticsPropertyKey<Integer> itemIndexSemanticsPropertyKey, SemanticsPropertyKey<Integer> lengthSemanticsPropertyKey)","description":"io.github.kakaocup.compose.node.element.list.KListNode.KListNode","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/-k-list-node.html","searchKeys":["KListNode","public KListNode KListNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode, Boolean useUnmergedTree, Boolean isScrollable, SemanticsPropertyKey<Integer> itemIndexSemanticsPropertyKey, SemanticsPropertyKey<Integer> lengthSemanticsPropertyKey)","io.github.kakaocup.compose.node.element.list.KListNode.KListNode"]},{"name":"public KNode KNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction)","description":"io.github.kakaocup.compose.node.element.KNode.KNode","location":"compose/io.github.kakaocup.compose.node.element/-k-node/-k-node.html","searchKeys":["KNode","public KNode KNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction)","io.github.kakaocup.compose.node.element.KNode.KNode"]},{"name":"public KNode KNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher)","description":"io.github.kakaocup.compose.node.element.KNode.KNode","location":"compose/io.github.kakaocup.compose.node.element/-k-node/-k-node.html","searchKeys":["KNode","public KNode KNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher)","io.github.kakaocup.compose.node.element.KNode.KNode"]},{"name":"public KNode KNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode)","description":"io.github.kakaocup.compose.node.element.KNode.KNode","location":"compose/io.github.kakaocup.compose.node.element/-k-node/-k-node.html","searchKeys":["KNode","public KNode KNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode)","io.github.kakaocup.compose.node.element.KNode.KNode"]},{"name":"public KTextNode KTextNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode, Boolean useUnmergedTree)","description":"io.github.kakaocup.compose.node.element.KTextNode.KTextNode","location":"compose/io.github.kakaocup.compose.node.element/-k-text-node/-k-text-node.html","searchKeys":["KTextNode","public KTextNode KTextNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode, Boolean useUnmergedTree)","io.github.kakaocup.compose.node.element.KTextNode.KTextNode"]},{"name":"public KakaoComposeException KakaoComposeException(String message)","description":"io.github.kakaocup.compose.exception.KakaoComposeException.KakaoComposeException","location":"compose/io.github.kakaocup.compose.exception/-kakao-compose-exception/-kakao-compose-exception.html","searchKeys":["KakaoComposeException","public KakaoComposeException KakaoComposeException(String message)","io.github.kakaocup.compose.exception.KakaoComposeException.KakaoComposeException"]},{"name":"public KakaoComposeTestRule KakaoComposeTestRule(SemanticsNodeInteractionsProvider semanticsProvider, Boolean useUnmergedTree)","description":"io.github.kakaocup.compose.rule.KakaoComposeTestRule.KakaoComposeTestRule","location":"compose/io.github.kakaocup.compose.rule/-kakao-compose-test-rule/-kakao-compose-test-rule.html","searchKeys":["KakaoComposeTestRule","public KakaoComposeTestRule KakaoComposeTestRule(SemanticsNodeInteractionsProvider semanticsProvider, Boolean useUnmergedTree)","io.github.kakaocup.compose.rule.KakaoComposeTestRule.KakaoComposeTestRule"]},{"name":"public LazyListItemProvisionException LazyListItemProvisionException(KClass<?> itemNodeClazz)","description":"io.github.kakaocup.compose.node.element.lazylist.LazyListItemProvisionException.LazyListItemProvisionException","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-lazy-list-item-provision-exception/-lazy-list-item-provision-exception.html","searchKeys":["LazyListItemProvisionException","public LazyListItemProvisionException LazyListItemProvisionException(KClass<?> itemNodeClazz)","io.github.kakaocup.compose.node.element.lazylist.LazyListItemProvisionException.LazyListItemProvisionException"]},{"name":"public NodeMatcher NodeMatcher(SemanticsMatcher matcher, Integer position, Boolean useUnmergedTree)","description":"io.github.kakaocup.compose.node.builder.NodeMatcher.NodeMatcher","location":"compose/io.github.kakaocup.compose.node.builder/-node-matcher/-node-matcher.html","searchKeys":["NodeMatcher","public NodeMatcher NodeMatcher(SemanticsMatcher matcher, Integer position, Boolean useUnmergedTree)","io.github.kakaocup.compose.node.builder.NodeMatcher.NodeMatcher"]},{"name":"public NodeProvider NodeProvider(NodeMatcher nodeMatcher, SemanticsNodeInteractionsProvider semanticsProvider)","description":"io.github.kakaocup.compose.node.builder.NodeProvider.NodeProvider","location":"compose/io.github.kakaocup.compose.node.builder/-node-provider/-node-provider.html","searchKeys":["NodeProvider","public NodeProvider NodeProvider(NodeMatcher nodeMatcher, SemanticsNodeInteractionsProvider semanticsProvider)","io.github.kakaocup.compose.node.builder.NodeProvider.NodeProvider"]},{"name":"public SemanticsPropertyKey<Integer> getLengthSemanticsPropertyKey()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getLengthSemanticsPropertyKey","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/get-length-semantics-property-key.html","searchKeys":["getLengthSemanticsPropertyKey","public SemanticsPropertyKey<Integer> getLengthSemanticsPropertyKey()","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getLengthSemanticsPropertyKey"]},{"name":"public SemanticsPropertyKey<Integer> getLengthSemanticsPropertyKey()","description":"io.github.kakaocup.compose.node.element.list.KListNode.getLengthSemanticsPropertyKey","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/get-length-semantics-property-key.html","searchKeys":["getLengthSemanticsPropertyKey","public SemanticsPropertyKey<Integer> getLengthSemanticsPropertyKey()","io.github.kakaocup.compose.node.element.list.KListNode.getLengthSemanticsPropertyKey"]},{"name":"public Statement apply(Statement base, Description description)","description":"io.github.kakaocup.compose.rule.KakaoComposeTestRule.apply","location":"compose/io.github.kakaocup.compose.rule/-kakao-compose-test-rule/apply.html","searchKeys":["apply","public Statement apply(Statement base, Description description)","io.github.kakaocup.compose.rule.KakaoComposeTestRule.apply"]},{"name":"public String toString()","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.toString","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/to-string.html","searchKeys":["toString","public String toString()","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.toString"]},{"name":"public T perform(Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.core.KDSL.perform","location":"compose/io.github.kakaocup.compose.node.core/-k-d-s-l/perform.html","searchKeys":["perform","public T perform(Function1<T, Unit> function)","io.github.kakaocup.compose.node.core.KDSL.perform"]},{"name":"public Unit assert(SemanticsMatcher matcher, Function0<String> messagePrefixOnError)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assert","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert.html","searchKeys":["assert","public Unit assert(SemanticsMatcher matcher, Function0<String> messagePrefixOnError)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assert"]},{"name":"public Unit assertContentDescriptionContains(Integer value, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.assertion.TextResourcesNodeAssertions.assertContentDescriptionContains","location":"compose/io.github.kakaocup.compose.node.assertion/-text-resources-node-assertions/assert-content-description-contains.html","searchKeys":["assertContentDescriptionContains","public Unit assertContentDescriptionContains(Integer value, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.assertion.TextResourcesNodeAssertions.assertContentDescriptionContains"]},{"name":"public Unit assertContentDescriptionContains(String value, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertContentDescriptionContains","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-content-description-contains.html","searchKeys":["assertContentDescriptionContains","public Unit assertContentDescriptionContains(String value, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertContentDescriptionContains"]},{"name":"public Unit assertContentDescriptionEquals(Integer values)","description":"io.github.kakaocup.compose.node.assertion.TextResourcesNodeAssertions.assertContentDescriptionEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-text-resources-node-assertions/assert-content-description-equals.html","searchKeys":["assertContentDescriptionEquals","public Unit assertContentDescriptionEquals(Integer values)","io.github.kakaocup.compose.node.assertion.TextResourcesNodeAssertions.assertContentDescriptionEquals"]},{"name":"public Unit assertContentDescriptionEquals(String values)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertContentDescriptionEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-content-description-equals.html","searchKeys":["assertContentDescriptionEquals","public Unit assertContentDescriptionEquals(String values)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertContentDescriptionEquals"]},{"name":"public Unit assertContentEquals(ImageVector imageVector)","description":"io.github.kakaocup.compose.node.assertion.ImageContentAssertions.assertContentEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-image-content-assertions/assert-content-equals.html","searchKeys":["assertContentEquals","public Unit assertContentEquals(ImageVector imageVector)","io.github.kakaocup.compose.node.assertion.ImageContentAssertions.assertContentEquals"]},{"name":"public Unit assertContentEquals(Integer drawableRes)","description":"io.github.kakaocup.compose.node.assertion.ImageContentAssertions.assertContentEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-image-content-assertions/assert-content-equals.html","searchKeys":["assertContentEquals","public Unit assertContentEquals(Integer drawableRes)","io.github.kakaocup.compose.node.assertion.ImageContentAssertions.assertContentEquals"]},{"name":"public Unit assertDoesNotExist()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertDoesNotExist","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-does-not-exist.html","searchKeys":["assertDoesNotExist","public Unit assertDoesNotExist()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertDoesNotExist"]},{"name":"public Unit assertExists(String errorMessageOnFail)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertExists","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-exists.html","searchKeys":["assertExists","public Unit assertExists(String errorMessageOnFail)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertExists"]},{"name":"public Unit assertHasClickAction()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertHasClickAction","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-has-click-action.html","searchKeys":["assertHasClickAction","public Unit assertHasClickAction()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertHasClickAction"]},{"name":"public Unit assertHasNoClickAction()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertHasNoClickAction","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-has-no-click-action.html","searchKeys":["assertHasNoClickAction","public Unit assertHasNoClickAction()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertHasNoClickAction"]},{"name":"public Unit assertIsDisplayed()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsDisplayed","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-displayed.html","searchKeys":["assertIsDisplayed","public Unit assertIsDisplayed()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsDisplayed"]},{"name":"public Unit assertIsEnabled()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsEnabled","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-enabled.html","searchKeys":["assertIsEnabled","public Unit assertIsEnabled()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsEnabled"]},{"name":"public Unit assertIsFocused()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsFocused","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-focused.html","searchKeys":["assertIsFocused","public Unit assertIsFocused()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsFocused"]},{"name":"public Unit assertIsNotDisplayed()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotDisplayed","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-not-displayed.html","searchKeys":["assertIsNotDisplayed","public Unit assertIsNotDisplayed()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotDisplayed"]},{"name":"public Unit assertIsNotEnabled()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotEnabled","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-not-enabled.html","searchKeys":["assertIsNotEnabled","public Unit assertIsNotEnabled()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotEnabled"]},{"name":"public Unit assertIsNotFocused()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotFocused","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-not-focused.html","searchKeys":["assertIsNotFocused","public Unit assertIsNotFocused()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotFocused"]},{"name":"public Unit assertIsNotSelected()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotSelected","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-not-selected.html","searchKeys":["assertIsNotSelected","public Unit assertIsNotSelected()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotSelected"]},{"name":"public Unit assertIsOff()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsOff","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-off.html","searchKeys":["assertIsOff","public Unit assertIsOff()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsOff"]},{"name":"public Unit assertIsOn()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsOn","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-on.html","searchKeys":["assertIsOn","public Unit assertIsOn()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsOn"]},{"name":"public Unit assertIsSelectable()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsSelectable","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-selectable.html","searchKeys":["assertIsSelectable","public Unit assertIsSelectable()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsSelectable"]},{"name":"public Unit assertIsSelected()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsSelected","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-selected.html","searchKeys":["assertIsSelected","public Unit assertIsSelected()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsSelected"]},{"name":"public Unit assertIsToggleable()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsToggleable","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-toggleable.html","searchKeys":["assertIsToggleable","public Unit assertIsToggleable()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsToggleable"]},{"name":"public Unit assertLengthEquals(Integer length)","description":"io.github.kakaocup.compose.node.assertion.LazyListNodeAssertions.assertLengthEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-lazy-list-node-assertions/assert-length-equals.html","searchKeys":["assertLengthEquals","public Unit assertLengthEquals(Integer length)","io.github.kakaocup.compose.node.assertion.LazyListNodeAssertions.assertLengthEquals"]},{"name":"public Unit assertLengthEquals(Integer length)","description":"io.github.kakaocup.compose.node.assertion.ListNodeAssertions.assertLengthEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-list-node-assertions/assert-length-equals.html","searchKeys":["assertLengthEquals","public Unit assertLengthEquals(Integer length)","io.github.kakaocup.compose.node.assertion.ListNodeAssertions.assertLengthEquals"]},{"name":"public Unit assertRangeInfoEquals(ProgressBarRangeInfo value)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertRangeInfoEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-range-info-equals.html","searchKeys":["assertRangeInfoEquals","public Unit assertRangeInfoEquals(ProgressBarRangeInfo value)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertRangeInfoEquals"]},{"name":"public Unit assertTextColorEquals(Color color)","description":"io.github.kakaocup.compose.node.assertion.TextColorAssertions.assertTextColorEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-text-color-assertions/assert-text-color-equals.html","searchKeys":["assertTextColorEquals","public Unit assertTextColorEquals(Color color)","io.github.kakaocup.compose.node.assertion.TextColorAssertions.assertTextColorEquals"]},{"name":"public Unit assertTextColorEquals(Long color)","description":"io.github.kakaocup.compose.node.assertion.TextColorAssertions.assertTextColorEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-text-color-assertions/assert-text-color-equals.html","searchKeys":["assertTextColorEquals","public Unit assertTextColorEquals(Long color)","io.github.kakaocup.compose.node.assertion.TextColorAssertions.assertTextColorEquals"]},{"name":"public Unit assertTextColorEquals(String color)","description":"io.github.kakaocup.compose.node.assertion.TextColorAssertions.assertTextColorEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-text-color-assertions/assert-text-color-equals.html","searchKeys":["assertTextColorEquals","public Unit assertTextColorEquals(String color)","io.github.kakaocup.compose.node.assertion.TextColorAssertions.assertTextColorEquals"]},{"name":"public Unit assertTextContains(Integer value, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.assertion.TextResourcesNodeAssertions.assertTextContains","location":"compose/io.github.kakaocup.compose.node.assertion/-text-resources-node-assertions/assert-text-contains.html","searchKeys":["assertTextContains","public Unit assertTextContains(Integer value, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.assertion.TextResourcesNodeAssertions.assertTextContains"]},{"name":"public Unit assertTextContains(String value, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertTextContains","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-text-contains.html","searchKeys":["assertTextContains","public Unit assertTextContains(String value, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertTextContains"]},{"name":"public Unit assertTextEquals(Integer values, Boolean includeEditableText)","description":"io.github.kakaocup.compose.node.assertion.TextResourcesNodeAssertions.assertTextEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-text-resources-node-assertions/assert-text-equals.html","searchKeys":["assertTextEquals","public Unit assertTextEquals(Integer values, Boolean includeEditableText)","io.github.kakaocup.compose.node.assertion.TextResourcesNodeAssertions.assertTextEquals"]},{"name":"public Unit assertTextEquals(String values, Boolean includeEditableText)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertTextEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-text-equals.html","searchKeys":["assertTextEquals","public Unit assertTextEquals(String values, Boolean includeEditableText)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertTextEquals"]},{"name":"public Unit assertTintColorEquals(Color color)","description":"io.github.kakaocup.compose.node.assertion.TintColorAssertions.assertTintColorEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-tint-color-assertions/assert-tint-color-equals.html","searchKeys":["assertTintColorEquals","public Unit assertTintColorEquals(Color color)","io.github.kakaocup.compose.node.assertion.TintColorAssertions.assertTintColorEquals"]},{"name":"public Unit assertTintColorEquals(Long color)","description":"io.github.kakaocup.compose.node.assertion.TintColorAssertions.assertTintColorEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-tint-color-assertions/assert-tint-color-equals.html","searchKeys":["assertTintColorEquals","public Unit assertTintColorEquals(Long color)","io.github.kakaocup.compose.node.assertion.TintColorAssertions.assertTintColorEquals"]},{"name":"public Unit assertTintColorEquals(String color)","description":"io.github.kakaocup.compose.node.assertion.TintColorAssertions.assertTintColorEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-tint-color-assertions/assert-tint-color-equals.html","searchKeys":["assertTintColorEquals","public Unit assertTintColorEquals(String color)","io.github.kakaocup.compose.node.assertion.TintColorAssertions.assertTintColorEquals"]},{"name":"public Unit assertValueEquals(Integer value)","description":"io.github.kakaocup.compose.node.assertion.TextResourcesNodeAssertions.assertValueEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-text-resources-node-assertions/assert-value-equals.html","searchKeys":["assertValueEquals","public Unit assertValueEquals(Integer value)","io.github.kakaocup.compose.node.assertion.TextResourcesNodeAssertions.assertValueEquals"]},{"name":"public Unit assertValueEquals(String value)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertValueEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-value-equals.html","searchKeys":["assertValueEquals","public Unit assertValueEquals(String value)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertValueEquals"]},{"name":"public Unit check(ASSERTION assertion)","description":"io.github.kakaocup.compose.intercept.delegate.Delegate.check","location":"compose/io.github.kakaocup.compose.intercept.delegate/-delegate/check.html","searchKeys":["check","public Unit check(ASSERTION assertion)","io.github.kakaocup.compose.intercept.delegate.Delegate.check"]},{"name":"public Unit check(ComposeAssertion assertion)","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.check","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/check.html","searchKeys":["check","public Unit check(ComposeAssertion assertion)","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.check"]},{"name":"public Unit intercept(Function1<Interceptor.Builder<ComposeInteraction, ComposeAssertion, ComposeAction>, Unit> builder)","description":"io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable.intercept","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-interceptable/intercept.html","searchKeys":["intercept","public Unit intercept(Function1<Interceptor.Builder<ComposeInteraction, ComposeAssertion, ComposeAction>, Unit> builder)","io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable.intercept"]},{"name":"public Unit invoke(Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.core.KDSL.invoke","location":"compose/io.github.kakaocup.compose.node.core/-k-d-s-l/invoke.html","searchKeys":["invoke","public Unit invoke(Function1<T, Unit> function)","io.github.kakaocup.compose.node.core.KDSL.invoke"]},{"name":"public Unit perform(ACTION action)","description":"io.github.kakaocup.compose.intercept.delegate.Delegate.perform","location":"compose/io.github.kakaocup.compose.intercept.delegate/-delegate/perform.html","searchKeys":["perform","public Unit perform(ACTION action)","io.github.kakaocup.compose.intercept.delegate.Delegate.perform"]},{"name":"public Unit perform(ComposeAction action)","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.perform","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/perform.html","searchKeys":["perform","public Unit perform(ComposeAction action)","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.perform"]},{"name":"public Unit performClick()","description":"io.github.kakaocup.compose.node.action.NodeActions.performClick","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-click.html","searchKeys":["performClick","public Unit performClick()","io.github.kakaocup.compose.node.action.NodeActions.performClick"]},{"name":"public Unit performGesture(Function1<GestureScope, Unit> block)","description":"io.github.kakaocup.compose.node.action.NodeActions.performGesture","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-gesture.html","searchKeys":["performGesture","public Unit performGesture(Function1<GestureScope, Unit> block)","io.github.kakaocup.compose.node.action.NodeActions.performGesture"]},{"name":"public Unit performImeAction()","description":"io.github.kakaocup.compose.node.action.TextActions.performImeAction","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/perform-ime-action.html","searchKeys":["performImeAction","public Unit performImeAction()","io.github.kakaocup.compose.node.action.TextActions.performImeAction"]},{"name":"public Unit performScrollTo()","description":"io.github.kakaocup.compose.node.action.NodeActions.performScrollTo","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-scroll-to.html","searchKeys":["performScrollTo","public Unit performScrollTo()","io.github.kakaocup.compose.node.action.NodeActions.performScrollTo"]},{"name":"public Unit performScrollToIndex(Integer index)","description":"io.github.kakaocup.compose.node.action.NodeActions.performScrollToIndex","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-scroll-to-index.html","searchKeys":["performScrollToIndex","public Unit performScrollToIndex(Integer index)","io.github.kakaocup.compose.node.action.NodeActions.performScrollToIndex"]},{"name":"public Unit performScrollToIndex(Integer index)","description":"io.github.kakaocup.compose.node.element.list.KListNode.performScrollToIndex","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/perform-scroll-to-index.html","searchKeys":["performScrollToIndex","public Unit performScrollToIndex(Integer index)","io.github.kakaocup.compose.node.element.list.KListNode.performScrollToIndex"]},{"name":"public Unit performScrollToKey(Object key)","description":"io.github.kakaocup.compose.node.action.NodeActions.performScrollToKey","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-scroll-to-key.html","searchKeys":["performScrollToKey","public Unit performScrollToKey(Object key)","io.github.kakaocup.compose.node.action.NodeActions.performScrollToKey"]},{"name":"public Unit performScrollToNode(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.action.NodeActions.performScrollToNode","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-scroll-to-node.html","searchKeys":["performScrollToNode","public Unit performScrollToNode(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.action.NodeActions.performScrollToNode"]},{"name":"public Unit performSemanticsAction(SemanticsPropertyKey<AccessibilityAction<Function0<Boolean>>> key)","description":"io.github.kakaocup.compose.node.action.NodeActions.performSemanticsAction","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-semantics-action.html","searchKeys":["performSemanticsAction","public Unit performSemanticsAction(SemanticsPropertyKey<AccessibilityAction<Function0<Boolean>>> key)","io.github.kakaocup.compose.node.action.NodeActions.performSemanticsAction"]},{"name":"public Unit performSemanticsAction<T extends Function<Boolean>>(SemanticsPropertyKey<AccessibilityAction<T>> key, Function1<T, Unit> invocation)","description":"io.github.kakaocup.compose.node.action.NodeActions.performSemanticsAction","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-semantics-action.html","searchKeys":["performSemanticsAction","public Unit performSemanticsAction<T extends Function<Boolean>>(SemanticsPropertyKey<AccessibilityAction<T>> key, Function1<T, Unit> invocation)","io.github.kakaocup.compose.node.action.NodeActions.performSemanticsAction"]},{"name":"public Unit performTextClearance()","description":"io.github.kakaocup.compose.node.action.TextActions.performTextClearance","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/perform-text-clearance.html","searchKeys":["performTextClearance","public Unit performTextClearance()","io.github.kakaocup.compose.node.action.TextActions.performTextClearance"]},{"name":"public Unit performTextInput(String text)","description":"io.github.kakaocup.compose.node.action.TextActions.performTextInput","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/perform-text-input.html","searchKeys":["performTextInput","public Unit performTextInput(String text)","io.github.kakaocup.compose.node.action.TextActions.performTextInput"]},{"name":"public Unit performTextInputSelection(TextRange selection)","description":"io.github.kakaocup.compose.node.action.TextActions.performTextInputSelection","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/perform-text-input-selection.html","searchKeys":["performTextInputSelection","public Unit performTextInputSelection(TextRange selection)","io.github.kakaocup.compose.node.action.TextActions.performTextInputSelection"]},{"name":"public Unit performTextReplacement(String text)","description":"io.github.kakaocup.compose.node.action.TextActions.performTextReplacement","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/perform-text-replacement.html","searchKeys":["performTextReplacement","public Unit performTextReplacement(String text)","io.github.kakaocup.compose.node.action.TextActions.performTextReplacement"]},{"name":"public Unit performTouchInput(Function1<TouchInjectionScope, Unit> block)","description":"io.github.kakaocup.compose.node.action.NodeActions.performTouchInput","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-touch-input.html","searchKeys":["performTouchInput","public Unit performTouchInput(Function1<TouchInjectionScope, Unit> block)","io.github.kakaocup.compose.node.action.NodeActions.performTouchInput"]},{"name":"public Unit reset()","description":"io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable.reset","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-interceptable/reset.html","searchKeys":["reset","public Unit reset()","io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable.reset"]},{"name":"public ViewBuilder ViewBuilder()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.ViewBuilder","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/-view-builder.html","searchKeys":["ViewBuilder","public ViewBuilder ViewBuilder()","io.github.kakaocup.compose.node.builder.ViewBuilder.ViewBuilder"]},{"name":"public abstract ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable.getDelegate","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-interceptable/get-delegate.html","searchKeys":["getDelegate","public abstract ComposeDelegate getDelegate()","io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable.getDelegate"]},{"name":"public abstract ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.node.action.NodeActions.getDelegate","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/get-delegate.html","searchKeys":["getDelegate","public abstract ComposeDelegate getDelegate()","io.github.kakaocup.compose.node.action.NodeActions.getDelegate"]},{"name":"public abstract ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.node.action.TextActions.getDelegate","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/get-delegate.html","searchKeys":["getDelegate","public abstract ComposeDelegate getDelegate()","io.github.kakaocup.compose.node.action.TextActions.getDelegate"]},{"name":"public abstract ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.getDelegate","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/get-delegate.html","searchKeys":["getDelegate","public abstract ComposeDelegate getDelegate()","io.github.kakaocup.compose.node.assertion.NodeAssertions.getDelegate"]},{"name":"public abstract ComposeOperationType getType()","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperation.getType","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation/get-type.html","searchKeys":["getType","public abstract ComposeOperationType getType()","io.github.kakaocup.compose.intercept.operation.ComposeOperation.getType"]},{"name":"public abstract Function0<Interceptor<INTERACTION, ASSERTION, ACTION>> getGlobalInterceptor()","description":"io.github.kakaocup.compose.intercept.delegate.Delegate.getGlobalInterceptor","location":"compose/io.github.kakaocup.compose.intercept.delegate/-delegate/get-global-interceptor.html","searchKeys":["getGlobalInterceptor","public abstract Function0<Interceptor<INTERACTION, ASSERTION, ACTION>> getGlobalInterceptor()","io.github.kakaocup.compose.intercept.delegate.Delegate.getGlobalInterceptor"]},{"name":"public abstract Function0<Iterable<Interceptor<INTERACTION, ASSERTION, ACTION>>> getNodeInterceptors()","description":"io.github.kakaocup.compose.intercept.delegate.Delegate.getNodeInterceptors","location":"compose/io.github.kakaocup.compose.intercept.delegate/-delegate/get-node-interceptors.html","searchKeys":["getNodeInterceptors","public abstract Function0<Iterable<Interceptor<INTERACTION, ASSERTION, ACTION>>> getNodeInterceptors()","io.github.kakaocup.compose.intercept.delegate.Delegate.getNodeInterceptors"]},{"name":"public abstract INTERACTION getInteraction()","description":"io.github.kakaocup.compose.intercept.delegate.Delegate.getInteraction","location":"compose/io.github.kakaocup.compose.intercept.delegate/-delegate/get-interaction.html","searchKeys":["getInteraction","public abstract INTERACTION getInteraction()","io.github.kakaocup.compose.intercept.delegate.Delegate.getInteraction"]},{"name":"public abstract SemanticsPropertyKey<Color> getTextColorSemanticsPropertyKey()","description":"io.github.kakaocup.compose.node.assertion.TextColorAssertions.getTextColorSemanticsPropertyKey","location":"compose/io.github.kakaocup.compose.node.assertion/-text-color-assertions/get-text-color-semantics-property-key.html","searchKeys":["getTextColorSemanticsPropertyKey","public abstract SemanticsPropertyKey<Color> getTextColorSemanticsPropertyKey()","io.github.kakaocup.compose.node.assertion.TextColorAssertions.getTextColorSemanticsPropertyKey"]},{"name":"public abstract SemanticsPropertyKey<Color> getTintColorSemanticsPropertyKey()","description":"io.github.kakaocup.compose.node.assertion.TintColorAssertions.getTintColorSemanticsPropertyKey","location":"compose/io.github.kakaocup.compose.node.assertion/-tint-color-assertions/get-tint-color-semantics-property-key.html","searchKeys":["getTintColorSemanticsPropertyKey","public abstract SemanticsPropertyKey<Color> getTintColorSemanticsPropertyKey()","io.github.kakaocup.compose.node.assertion.TintColorAssertions.getTintColorSemanticsPropertyKey"]},{"name":"public abstract SemanticsPropertyKey<Integer> getLengthSemanticsPropertyKey()","description":"io.github.kakaocup.compose.node.assertion.LazyListNodeAssertions.getLengthSemanticsPropertyKey","location":"compose/io.github.kakaocup.compose.node.assertion/-lazy-list-node-assertions/get-length-semantics-property-key.html","searchKeys":["getLengthSemanticsPropertyKey","public abstract SemanticsPropertyKey<Integer> getLengthSemanticsPropertyKey()","io.github.kakaocup.compose.node.assertion.LazyListNodeAssertions.getLengthSemanticsPropertyKey"]},{"name":"public abstract SemanticsPropertyKey<Integer> getLengthSemanticsPropertyKey()","description":"io.github.kakaocup.compose.node.assertion.ListNodeAssertions.getLengthSemanticsPropertyKey","location":"compose/io.github.kakaocup.compose.node.assertion/-list-node-assertions/get-length-semantics-property-key.html","searchKeys":["getLengthSemanticsPropertyKey","public abstract SemanticsPropertyKey<Integer> getLengthSemanticsPropertyKey()","io.github.kakaocup.compose.node.assertion.ListNodeAssertions.getLengthSemanticsPropertyKey"]},{"name":"public abstract SemanticsPropertyKey<Object> getImageContentSemanticsPropertyKey()","description":"io.github.kakaocup.compose.node.assertion.ImageContentAssertions.getImageContentSemanticsPropertyKey","location":"compose/io.github.kakaocup.compose.node.assertion/-image-content-assertions/get-image-content-semantics-property-key.html","searchKeys":["getImageContentSemanticsPropertyKey","public abstract SemanticsPropertyKey<Object> getImageContentSemanticsPropertyKey()","io.github.kakaocup.compose.node.assertion.ImageContentAssertions.getImageContentSemanticsPropertyKey"]},{"name":"public abstract String getDescription()","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperation.getDescription","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation/get-description.html","searchKeys":["getDescription","public abstract String getDescription()","io.github.kakaocup.compose.intercept.operation.ComposeOperation.getDescription"]},{"name":"public abstract String getName()","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperationType.getName","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation-type/get-name.html","searchKeys":["getName","public abstract String getName()","io.github.kakaocup.compose.intercept.operation.ComposeOperationType.getName"]},{"name":"public abstract Unit check(ASSERTION assertion)","description":"io.github.kakaocup.compose.intercept.interaction.Interaction.check","location":"compose/io.github.kakaocup.compose.intercept.interaction/-interaction/check.html","searchKeys":["check","public abstract Unit check(ASSERTION assertion)","io.github.kakaocup.compose.intercept.interaction.Interaction.check"]},{"name":"public abstract Unit execute(View innerView)","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperation.execute","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation/execute.html","searchKeys":["execute","public abstract Unit execute(View innerView)","io.github.kakaocup.compose.intercept.operation.ComposeOperation.execute"]},{"name":"public abstract Unit perform(ACTION action)","description":"io.github.kakaocup.compose.intercept.interaction.Interaction.perform","location":"compose/io.github.kakaocup.compose.intercept.interaction/-interaction/perform.html","searchKeys":["perform","public abstract Unit perform(ACTION action)","io.github.kakaocup.compose.intercept.interaction.Interaction.perform"]},{"name":"public abstract class BaseNode<T extends BaseNode<T>> implements KDSL<T>, NodeAssertions, TextResourcesNodeAssertions, NodeActions, TextActions, ComposeInterceptable","description":"io.github.kakaocup.compose.node.core.BaseNode","location":"compose/io.github.kakaocup.compose.node.core/-base-node/index.html","searchKeys":["BaseNode","public abstract class BaseNode<T extends BaseNode<T>> implements KDSL<T>, NodeAssertions, TextResourcesNodeAssertions, NodeActions, TextActions, ComposeInterceptable","io.github.kakaocup.compose.node.core.BaseNode"]},{"name":"public abstract class KIconNode extends BaseNode<KIconNode> implements ImageContentAssertions, TintColorAssertions","description":"io.github.kakaocup.compose.node.element.KIconNode","location":"compose/io.github.kakaocup.compose.node.element/-k-icon-node/index.html","searchKeys":["KIconNode","public abstract class KIconNode extends BaseNode<KIconNode> implements ImageContentAssertions, TintColorAssertions","io.github.kakaocup.compose.node.element.KIconNode"]},{"name":"public abstract class KLazyListItemNode<T extends KLazyListItemNode<T>> extends BaseNode<T>","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemNode","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-node/index.html","searchKeys":["KLazyListItemNode","public abstract class KLazyListItemNode<T extends KLazyListItemNode<T>> extends BaseNode<T>","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemNode"]},{"name":"public abstract class KTextNode extends BaseNode<KTextNode> implements TextColorAssertions","description":"io.github.kakaocup.compose.node.element.KTextNode","location":"compose/io.github.kakaocup.compose.node.element/-k-text-node/index.html","searchKeys":["KTextNode","public abstract class KTextNode extends BaseNode<KTextNode> implements TextColorAssertions","io.github.kakaocup.compose.node.element.KTextNode"]},{"name":"public class Companion","description":"io.github.kakaocup.compose.node.element.ComposeScreen.Companion","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/-companion/index.html","searchKeys":["Companion","public class Companion","io.github.kakaocup.compose.node.element.ComposeScreen.Companion"]},{"name":"public class Companion","description":"io.github.kakaocup.compose.node.element.list.KListItemNode.Companion","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-item-node/-companion/index.html","searchKeys":["Companion","public class Companion","io.github.kakaocup.compose.node.element.list.KListItemNode.Companion"]},{"name":"public class Companion","description":"io.github.kakaocup.compose.node.element.list.KListNode.Companion","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/-companion/index.html","searchKeys":["Companion","public class Companion","io.github.kakaocup.compose.node.element.list.KListNode.Companion"]},{"name":"public class ComposeScreen<T extends ComposeScreen<T>> extends BaseNode<T>","description":"io.github.kakaocup.compose.node.element.ComposeScreen","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/index.html","searchKeys":["ComposeScreen","public class ComposeScreen<T extends ComposeScreen<T>> extends BaseNode<T>","io.github.kakaocup.compose.node.element.ComposeScreen"]},{"name":"public class Global","description":"io.github.kakaocup.compose.KakaoCompose.Global","location":"compose/io.github.kakaocup.compose/-kakao-compose/-global/index.html","searchKeys":["Global","public class Global","io.github.kakaocup.compose.KakaoCompose.Global"]},{"name":"public class KListItemNode<T extends KListItemNode<T>> extends BaseNode<T>","description":"io.github.kakaocup.compose.node.element.list.KListItemNode","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-item-node/index.html","searchKeys":["KListItemNode","public class KListItemNode<T extends KListItemNode<T>> extends BaseNode<T>","io.github.kakaocup.compose.node.element.list.KListItemNode"]},{"name":"public class KNode extends BaseNode<KNode>","description":"io.github.kakaocup.compose.node.element.KNode","location":"compose/io.github.kakaocup.compose.node.element/-k-node/index.html","searchKeys":["KNode","public class KNode extends BaseNode<KNode>","io.github.kakaocup.compose.node.element.KNode"]},{"name":"public class KakaoCompose","description":"io.github.kakaocup.compose.KakaoCompose","location":"compose/io.github.kakaocup.compose/-kakao-compose/index.html","searchKeys":["KakaoCompose","public class KakaoCompose","io.github.kakaocup.compose.KakaoCompose"]},{"name":"public class Override","description":"io.github.kakaocup.compose.KakaoCompose.Override","location":"compose/io.github.kakaocup.compose/-kakao-compose/-override/index.html","searchKeys":["Override","public class Override","io.github.kakaocup.compose.KakaoCompose.Override"]},{"name":"public enum ComposeBaseActionType extends Enum<NodeActions.ComposeBaseActionType> implements ComposeOperationType","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/index.html","searchKeys":["ComposeBaseActionType","public enum ComposeBaseActionType extends Enum<NodeActions.ComposeBaseActionType> implements ComposeOperationType","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType"]},{"name":"public enum ComposeBaseAssertionType extends Enum<NodeAssertions.ComposeBaseAssertionType> implements ComposeOperationType","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/index.html","searchKeys":["ComposeBaseAssertionType","public enum ComposeBaseAssertionType extends Enum<NodeAssertions.ComposeBaseAssertionType> implements ComposeOperationType","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType"]},{"name":"public enum ComposeTextActionType extends Enum<TextActions.ComposeTextActionType> implements ComposeOperationType","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/index.html","searchKeys":["ComposeTextActionType","public enum ComposeTextActionType extends Enum<TextActions.ComposeTextActionType> implements ComposeOperationType","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType"]},{"name":"public final Array<NodeActions.ComposeBaseActionType> values()","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.values","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/values.html","searchKeys":["values","public final Array<NodeActions.ComposeBaseActionType> values()","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.values"]},{"name":"public final Array<NodeAssertions.ComposeBaseAssertionType> values()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.values","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/values.html","searchKeys":["values","public final Array<NodeAssertions.ComposeBaseAssertionType> values()","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.values"]},{"name":"public final Array<TextActions.ComposeTextActionType> values()","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.values","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/values.html","searchKeys":["values","public final Array<TextActions.ComposeTextActionType> values()","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.values"]},{"name":"public final Boolean getUseUnmergedTree()","description":"io.github.kakaocup.compose.KakaoCompose.Override.getUseUnmergedTree","location":"compose/io.github.kakaocup.compose/-kakao-compose/-override/get-use-unmerged-tree.html","searchKeys":["getUseUnmergedTree","public final Boolean getUseUnmergedTree()","io.github.kakaocup.compose.KakaoCompose.Override.getUseUnmergedTree"]},{"name":"public final Boolean getUseUnmergedTree()","description":"io.github.kakaocup.compose.node.builder.NodeMatcher.getUseUnmergedTree","location":"compose/io.github.kakaocup.compose.node.builder/-node-matcher/get-use-unmerged-tree.html","searchKeys":["getUseUnmergedTree","public final Boolean getUseUnmergedTree()","io.github.kakaocup.compose.node.builder.NodeMatcher.getUseUnmergedTree"]},{"name":"public final Boolean getUseUnmergedTree()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.getUseUnmergedTree","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/get-use-unmerged-tree.html","searchKeys":["getUseUnmergedTree","public final Boolean getUseUnmergedTree()","io.github.kakaocup.compose.node.builder.ViewBuilder.getUseUnmergedTree"]},{"name":"public final Boolean getUseUnmergedTree()","description":"io.github.kakaocup.compose.node.element.list.KListNode.getUseUnmergedTree","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/get-use-unmerged-tree.html","searchKeys":["getUseUnmergedTree","public final Boolean getUseUnmergedTree()","io.github.kakaocup.compose.node.element.list.KListNode.getUseUnmergedTree"]},{"name":"public final Boolean getUseUnmergedTree()","description":"io.github.kakaocup.compose.rule.KakaoComposeTestRule.getUseUnmergedTree","location":"compose/io.github.kakaocup.compose.rule/-kakao-compose-test-rule/get-use-unmerged-tree.html","searchKeys":["getUseUnmergedTree","public final Boolean getUseUnmergedTree()","io.github.kakaocup.compose.rule.KakaoComposeTestRule.getUseUnmergedTree"]},{"name":"public final Boolean isOverride()","description":"io.github.kakaocup.compose.intercept.base.Interception.isOverride","location":"compose/io.github.kakaocup.compose.intercept.base/-interception/is-override.html","searchKeys":["isOverride","public final Boolean isOverride()","io.github.kakaocup.compose.intercept.base.Interception.isOverride"]},{"name":"public final Boolean isScrollable()","description":"io.github.kakaocup.compose.node.element.list.KListNode.isScrollable","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/is-scrollable.html","searchKeys":["isScrollable","public final Boolean isScrollable()","io.github.kakaocup.compose.node.element.list.KListNode.isScrollable"]},{"name":"public final EnumEntries<NodeActions.ComposeBaseActionType> getEntries()","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.getEntries","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/get-entries.html","searchKeys":["getEntries","public final EnumEntries<NodeActions.ComposeBaseActionType> getEntries()","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.getEntries"]},{"name":"public final EnumEntries<NodeAssertions.ComposeBaseAssertionType> getEntries()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.getEntries","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/get-entries.html","searchKeys":["getEntries","public final EnumEntries<NodeAssertions.ComposeBaseAssertionType> getEntries()","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.getEntries"]},{"name":"public final EnumEntries<TextActions.ComposeTextActionType> getEntries()","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.getEntries","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/get-entries.html","searchKeys":["getEntries","public final EnumEntries<TextActions.ComposeTextActionType> getEntries()","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.getEntries"]},{"name":"public final Function1<Integer, SemanticsMatcher> getPositionMatcher()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getPositionMatcher","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/get-position-matcher.html","searchKeys":["getPositionMatcher","public final Function1<Integer, SemanticsMatcher> getPositionMatcher()","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getPositionMatcher"]},{"name":"public final Function2<SemanticsNode, SemanticsNodeInteractionsProvider, T> getProvideItem()","description":"io.github.kakaocup.compose.node.element.lazylist.KListItemType.getProvideItem","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-list-item-type/get-provide-item.html","searchKeys":["getProvideItem","public final Function2<SemanticsNode, SemanticsNodeInteractionsProvider, T> getProvideItem()","io.github.kakaocup.compose.node.element.lazylist.KListItemType.getProvideItem"]},{"name":"public final Integer getPosition()","description":"io.github.kakaocup.compose.node.builder.NodeMatcher.getPosition","location":"compose/io.github.kakaocup.compose.node.builder/-node-matcher/get-position.html","searchKeys":["getPosition","public final Integer getPosition()","io.github.kakaocup.compose.node.builder.NodeMatcher.getPosition"]},{"name":"public final Interception<Function1<INTERACTION, Unit>> getOnAll()","description":"io.github.kakaocup.compose.intercept.base.Interceptor.getOnAll","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/get-on-all.html","searchKeys":["getOnAll","public final Interception<Function1<INTERACTION, Unit>> getOnAll()","io.github.kakaocup.compose.intercept.base.Interceptor.getOnAll"]},{"name":"public final Interception<Function2<INTERACTION, ACTION, Unit>> getOnPerform()","description":"io.github.kakaocup.compose.intercept.base.Interceptor.getOnPerform","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/get-on-perform.html","searchKeys":["getOnPerform","public final Interception<Function2<INTERACTION, ACTION, Unit>> getOnPerform()","io.github.kakaocup.compose.intercept.base.Interceptor.getOnPerform"]},{"name":"public final Interception<Function2<INTERACTION, ASSERTION, Unit>> getOnCheck()","description":"io.github.kakaocup.compose.intercept.base.Interceptor.getOnCheck","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/get-on-check.html","searchKeys":["getOnCheck","public final Interception<Function2<INTERACTION, ASSERTION, Unit>> getOnCheck()","io.github.kakaocup.compose.intercept.base.Interceptor.getOnCheck"]},{"name":"public final Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> getComposeInterceptor()","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Configuration.getComposeInterceptor","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-configuration/get-compose-interceptor.html","searchKeys":["getComposeInterceptor","public final Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> getComposeInterceptor()","io.github.kakaocup.compose.intercept.base.Interceptor.Configuration.getComposeInterceptor"]},{"name":"public final Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> getCurrentInterceptor()","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getCurrentInterceptor","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/get-current-interceptor.html","searchKeys":["getCurrentInterceptor","public final Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> getCurrentInterceptor()","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getCurrentInterceptor"]},{"name":"public final KListItemNode<?> getItemAt(Integer index, Boolean needPerformScroll)","description":"io.github.kakaocup.compose.node.element.list.KListNode.getItemAt","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/get-item-at.html","searchKeys":["getItemAt","public final KListItemNode<?> getItemAt(Integer index, Boolean needPerformScroll)","io.github.kakaocup.compose.node.element.list.KListNode.getItemAt"]},{"name":"public final KListItemNode<?> getItemWith(Function1<ViewBuilder, Unit> viewBuilderAction, Boolean needPerformScroll)","description":"io.github.kakaocup.compose.node.element.list.KListNode.getItemWith","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/get-item-with.html","searchKeys":["getItemWith","public final KListItemNode<?> getItemWith(Function1<ViewBuilder, Unit> viewBuilderAction, Boolean needPerformScroll)","io.github.kakaocup.compose.node.element.list.KListNode.getItemWith"]},{"name":"public final KNode onNode(Function1<ViewBuilder, Unit> viewBuilderAction)","description":"io.github.kakaocup.compose.node.element.ComposeScreen.onNode","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/on-node.html","searchKeys":["onNode","public final KNode onNode(Function1<ViewBuilder, Unit> viewBuilderAction)","io.github.kakaocup.compose.node.element.ComposeScreen.onNode"]},{"name":"public final Map<KClass<? extends KLazyListItemNode<?>>, KListItemType<KLazyListItemNode<?>>> getItemTypes()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder.getItemTypes","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-builder/get-item-types.html","searchKeys":["getItemTypes","public final Map<KClass<? extends KLazyListItemNode<?>>, KListItemType<KLazyListItemNode<?>>> getItemTypes()","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder.getItemTypes"]},{"name":"public final Map<KClass<? extends KLazyListItemNode<?>>, KListItemType<KLazyListItemNode<?>>> getItemTypes()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getItemTypes","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/get-item-types.html","searchKeys":["getItemTypes","public final Map<KClass<? extends KLazyListItemNode<?>>, KListItemType<KLazyListItemNode<?>>> getItemTypes()","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getItemTypes"]},{"name":"public final NodeActions.ComposeBaseActionType valueOf(String value)","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.valueOf","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/value-of.html","searchKeys":["valueOf","public final NodeActions.ComposeBaseActionType valueOf(String value)","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.valueOf"]},{"name":"public final NodeAssertions.ComposeBaseAssertionType valueOf(String value)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.valueOf","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/value-of.html","searchKeys":["valueOf","public final NodeAssertions.ComposeBaseAssertionType valueOf(String value)","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.valueOf"]},{"name":"public final NodeMatcher build()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.build","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/build.html","searchKeys":["build","public final NodeMatcher build()","io.github.kakaocup.compose.node.builder.ViewBuilder.build"]},{"name":"public final NodeMatcher buildChildMatcher(Function1<ViewBuilder, Unit> viewBuilderAction)","description":"io.github.kakaocup.compose.node.element.list.KListNode.buildChildMatcher","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/build-child-matcher.html","searchKeys":["buildChildMatcher","public final NodeMatcher buildChildMatcher(Function1<ViewBuilder, Unit> viewBuilderAction)","io.github.kakaocup.compose.node.element.list.KListNode.buildChildMatcher"]},{"name":"public final NodeMatcher buildChildMatcher(Integer index)","description":"io.github.kakaocup.compose.node.element.list.KListNode.buildChildMatcher","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/build-child-matcher.html","searchKeys":["buildChildMatcher","public final NodeMatcher buildChildMatcher(Integer index)","io.github.kakaocup.compose.node.element.list.KListNode.buildChildMatcher"]},{"name":"public final NodeMatcher getNodeMatcher()","description":"io.github.kakaocup.compose.node.builder.NodeProvider.getNodeMatcher","location":"compose/io.github.kakaocup.compose.node.builder/-node-provider/get-node-matcher.html","searchKeys":["getNodeMatcher","public final NodeMatcher getNodeMatcher()","io.github.kakaocup.compose.node.builder.NodeProvider.getNodeMatcher"]},{"name":"public final NodeProvider getNodeProvider()","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.getNodeProvider","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/get-node-provider.html","searchKeys":["getNodeProvider","public final NodeProvider getNodeProvider()","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.getNodeProvider"]},{"name":"public final N child<N extends Any>(Function1<ViewBuilder, Unit> function)","description":"io.github.kakaocup.compose.node.core.BaseNode.child","location":"compose/io.github.kakaocup.compose.node.core/-base-node/child.html","searchKeys":["child","public final N child<N extends Any>(Function1<ViewBuilder, Unit> function)","io.github.kakaocup.compose.node.core.BaseNode.child"]},{"name":"public final SemanticsMatcher getMatcher()","description":"io.github.kakaocup.compose.node.builder.NodeMatcher.getMatcher","location":"compose/io.github.kakaocup.compose.node.builder/-node-matcher/get-matcher.html","searchKeys":["getMatcher","public final SemanticsMatcher getMatcher()","io.github.kakaocup.compose.node.builder.NodeMatcher.getMatcher"]},{"name":"public final SemanticsMatcher getRootNodeMatcher()","description":"io.github.kakaocup.compose.node.element.list.KListNode.getRootNodeMatcher","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/get-root-node-matcher.html","searchKeys":["getRootNodeMatcher","public final SemanticsMatcher getRootNodeMatcher()","io.github.kakaocup.compose.node.element.list.KListNode.getRootNodeMatcher"]},{"name":"public final SemanticsMatcher getSemanticsMatcher()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getSemanticsMatcher","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/get-semantics-matcher.html","searchKeys":["getSemanticsMatcher","public final SemanticsMatcher getSemanticsMatcher()","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getSemanticsMatcher"]},{"name":"public final SemanticsNodeInteractionsProvider getSemanticsProvider()","description":"io.github.kakaocup.compose.KakaoCompose.Global.getSemanticsProvider","location":"compose/io.github.kakaocup.compose/-kakao-compose/-global/get-semantics-provider.html","searchKeys":["getSemanticsProvider","public final SemanticsNodeInteractionsProvider getSemanticsProvider()","io.github.kakaocup.compose.KakaoCompose.Global.getSemanticsProvider"]},{"name":"public final SemanticsNodeInteractionsProvider getSemanticsProvider()","description":"io.github.kakaocup.compose.rule.KakaoComposeTestRule.getSemanticsProvider","location":"compose/io.github.kakaocup.compose.rule/-kakao-compose-test-rule/get-semantics-provider.html","searchKeys":["getSemanticsProvider","public final SemanticsNodeInteractionsProvider getSemanticsProvider()","io.github.kakaocup.compose.rule.KakaoComposeTestRule.getSemanticsProvider"]},{"name":"public final SemanticsNodeInteraction getSemanticsNodeInteraction()","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.getSemanticsNodeInteraction","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/get-semantics-node-interaction.html","searchKeys":["getSemanticsNodeInteraction","public final SemanticsNodeInteraction getSemanticsNodeInteraction()","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.getSemanticsNodeInteraction"]},{"name":"public final SemanticsNodeInteraction provideSemanticsNodeInteraction()","description":"io.github.kakaocup.compose.node.builder.NodeProvider.provideSemanticsNodeInteraction","location":"compose/io.github.kakaocup.compose.node.builder/-node-provider/provide-semantics-node-interaction.html","searchKeys":["provideSemanticsNodeInteraction","public final SemanticsNodeInteraction provideSemanticsNodeInteraction()","io.github.kakaocup.compose.node.builder.NodeProvider.provideSemanticsNodeInteraction"]},{"name":"public final SemanticsPropertyKey<Integer> getItemIndexSemanticsPropertyKey()","description":"io.github.kakaocup.compose.node.element.list.KListNode.getItemIndexSemanticsPropertyKey","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/get-item-index-semantics-property-key.html","searchKeys":["getItemIndexSemanticsPropertyKey","public final SemanticsPropertyKey<Integer> getItemIndexSemanticsPropertyKey()","io.github.kakaocup.compose.node.element.list.KListNode.getItemIndexSemanticsPropertyKey"]},{"name":"public final String getItemIndexPropertyErrorMessage()","description":"io.github.kakaocup.compose.node.element.list.KListNode.Companion.getItemIndexPropertyErrorMessage","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/-companion/get-item-index-property-error-message.html","searchKeys":["getItemIndexPropertyErrorMessage","public final String getItemIndexPropertyErrorMessage()","io.github.kakaocup.compose.node.element.list.KListNode.Companion.getItemIndexPropertyErrorMessage"]},{"name":"public final TextActions.ComposeTextActionType valueOf(String value)","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.valueOf","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/value-of.html","searchKeys":["valueOf","public final TextActions.ComposeTextActionType valueOf(String value)","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.valueOf"]},{"name":"public final T childWith<T extends KLazyListItemNode<?>>(Function1<ViewBuilder, Unit> childMatcher)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.childWith","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/child-with.html","searchKeys":["childWith","public final T childWith<T extends KLazyListItemNode<?>>(Function1<ViewBuilder, Unit> childMatcher)","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.childWith"]},{"name":"public final T createListItemNode<T extends KListItemNode<?>>(SemanticsNode semanticsNode)","description":"io.github.kakaocup.compose.node.element.list.KListNode.createListItemNode","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/create-list-item-node.html","searchKeys":["createListItemNode","public final T createListItemNode<T extends KListItemNode<?>>(SemanticsNode semanticsNode)","io.github.kakaocup.compose.node.element.list.KListNode.createListItemNode"]},{"name":"public final T getChildAt<T extends KListItemNode<?>>(Integer index, Boolean needPerformScroll)","description":"io.github.kakaocup.compose.node.element.list.KListNode.getChildAt","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/get-child-at.html","searchKeys":["getChildAt","public final T getChildAt<T extends KListItemNode<?>>(Integer index, Boolean needPerformScroll)","io.github.kakaocup.compose.node.element.list.KListNode.getChildAt"]},{"name":"public final T getChildWith<T extends KListItemNode<?>>(Function1<ViewBuilder, Unit> viewBuilderAction, Boolean needPerformScroll)","description":"io.github.kakaocup.compose.node.element.list.KListNode.getChildWith","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/get-child-with.html","searchKeys":["getChildWith","public final T getChildWith<T extends KListItemNode<?>>(Function1<ViewBuilder, Unit> viewBuilderAction, Boolean needPerformScroll)","io.github.kakaocup.compose.node.element.list.KListNode.getChildWith"]},{"name":"public final T getInterceptor()","description":"io.github.kakaocup.compose.intercept.base.Interception.getInterceptor","location":"compose/io.github.kakaocup.compose.intercept.base/-interception/get-interceptor.html","searchKeys":["getInterceptor","public final T getInterceptor()","io.github.kakaocup.compose.intercept.base.Interception.getInterceptor"]},{"name":"public final T newInstance<T extends KListItemNode<?>>(KListNode listNode, SemanticsNode semanticsNode, Boolean useUnmergedTree)","description":"io.github.kakaocup.compose.node.element.list.KListItemNode.Companion.newInstance","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-item-node/-companion/new-instance.html","searchKeys":["newInstance","public final T newInstance<T extends KListItemNode<?>>(KListNode listNode, SemanticsNode semanticsNode, Boolean useUnmergedTree)","io.github.kakaocup.compose.node.element.list.KListItemNode.Companion.newInstance"]},{"name":"public final T onComposeScreen<T extends ComposeScreen<T>>(Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.element.ComposeScreen.Companion.onComposeScreen","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/-companion/on-compose-screen.html","searchKeys":["onComposeScreen","public final T onComposeScreen<T extends ComposeScreen<T>>(Function1<T, Unit> function)","io.github.kakaocup.compose.node.element.ComposeScreen.Companion.onComposeScreen"]},{"name":"public final T onComposeScreen<T extends ComposeScreen<T>>(SemanticsNodeInteractionsProvider semanticsProvider, Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.element.ComposeScreen.Companion.onComposeScreen","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/-companion/on-compose-screen.html","searchKeys":["onComposeScreen","public final T onComposeScreen<T extends ComposeScreen<T>>(SemanticsNodeInteractionsProvider semanticsProvider, Function1<T, Unit> function)","io.github.kakaocup.compose.node.element.ComposeScreen.Companion.onComposeScreen"]},{"name":"public final Unit addSemanticsMatcher(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.addSemanticsMatcher","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/add-semantics-matcher.html","searchKeys":["addSemanticsMatcher","public final Unit addSemanticsMatcher(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.builder.ViewBuilder.addSemanticsMatcher"]},{"name":"public final Unit assertItemIsDisplayedAt(Integer index)","description":"io.github.kakaocup.compose.node.element.list.KListNode.assertItemIsDisplayedAt","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/assert-item-is-displayed-at.html","searchKeys":["assertItemIsDisplayedAt","public final Unit assertItemIsDisplayedAt(Integer index)","io.github.kakaocup.compose.node.element.list.KListNode.assertItemIsDisplayedAt"]},{"name":"public final Unit assertItemIsNotDisplayedAt(Integer index)","description":"io.github.kakaocup.compose.node.element.list.KListNode.assertItemIsNotDisplayedAt","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/assert-item-is-not-displayed-at.html","searchKeys":["assertItemIsNotDisplayedAt","public final Unit assertItemIsNotDisplayedAt(Integer index)","io.github.kakaocup.compose.node.element.list.KListNode.assertItemIsNotDisplayedAt"]},{"name":"public final Unit assertItemWithIsDisplayed(Function1<ViewBuilder, Unit> viewBuilderAction)","description":"io.github.kakaocup.compose.node.element.list.KListNode.assertItemWithIsDisplayed","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/assert-item-with-is-displayed.html","searchKeys":["assertItemWithIsDisplayed","public final Unit assertItemWithIsDisplayed(Function1<ViewBuilder, Unit> viewBuilderAction)","io.github.kakaocup.compose.node.element.list.KListNode.assertItemWithIsDisplayed"]},{"name":"public final Unit assertItemWithIsNotDisplayed(Function1<ViewBuilder, Unit> viewBuilderAction)","description":"io.github.kakaocup.compose.node.element.list.KListNode.assertItemWithIsNotDisplayed","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/assert-item-with-is-not-displayed.html","searchKeys":["assertItemWithIsNotDisplayed","public final Unit assertItemWithIsNotDisplayed(Function1<ViewBuilder, Unit> viewBuilderAction)","io.github.kakaocup.compose.node.element.list.KListNode.assertItemWithIsNotDisplayed"]},{"name":"public final Unit check(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.check","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/check.html","searchKeys":["check","public final Unit check(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.check"]},{"name":"public final Unit childAt<T extends KLazyListItemNode<?>>(Integer position, Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.childAt","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/child-at.html","searchKeys":["childAt","public final Unit childAt<T extends KLazyListItemNode<?>>(Integer position, Function1<T, Unit> function)","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.childAt"]},{"name":"public final Unit childAt<T extends KListItemNode<?>>(Integer index, Boolean needPerformScroll, Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.element.list.KListNode.childAt","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/child-at.html","searchKeys":["childAt","public final Unit childAt<T extends KListItemNode<?>>(Integer index, Boolean needPerformScroll, Function1<T, Unit> function)","io.github.kakaocup.compose.node.element.list.KListNode.childAt"]},{"name":"public final Unit childWith<T extends KListItemNode<?>>(Function1<ViewBuilder, Unit> viewBuilderAction, Boolean needPerformScroll, Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.element.list.KListNode.childWith","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/child-with.html","searchKeys":["childWith","public final Unit childWith<T extends KListItemNode<?>>(Function1<ViewBuilder, Unit> viewBuilderAction, Boolean needPerformScroll, Function1<T, Unit> function)","io.github.kakaocup.compose.node.element.list.KListNode.childWith"]},{"name":"public final Unit firstChild<T extends KLazyListItemNode<?>>(Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.firstChild","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/first-child.html","searchKeys":["firstChild","public final Unit firstChild<T extends KLazyListItemNode<?>>(Function1<T, Unit> function)","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.firstChild"]},{"name":"public final Unit firstChild<T extends KListItemNode<?>>(Boolean needPerformScroll, Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.element.list.KListNode.firstChild","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/first-child.html","searchKeys":["firstChild","public final Unit firstChild<T extends KListItemNode<?>>(Boolean needPerformScroll, Function1<T, Unit> function)","io.github.kakaocup.compose.node.element.list.KListNode.firstChild"]},{"name":"public final Unit firstItem(Boolean needPerformScroll, Function1<KListItemNode<?>, Unit> function)","description":"io.github.kakaocup.compose.node.element.list.KListNode.firstItem","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/first-item.html","searchKeys":["firstItem","public final Unit firstItem(Boolean needPerformScroll, Function1<KListItemNode<?>, Unit> function)","io.github.kakaocup.compose.node.element.list.KListNode.firstItem"]},{"name":"public final Unit hasAnyAncestor(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnyAncestor","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-any-ancestor.html","searchKeys":["hasAnyAncestor","public final Unit hasAnyAncestor(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnyAncestor"]},{"name":"public final Unit hasAnyChild(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnyChild","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-any-child.html","searchKeys":["hasAnyChild","public final Unit hasAnyChild(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnyChild"]},{"name":"public final Unit hasAnyDescendant(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnyDescendant","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-any-descendant.html","searchKeys":["hasAnyDescendant","public final Unit hasAnyDescendant(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnyDescendant"]},{"name":"public final Unit hasAnySibling(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnySibling","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-any-sibling.html","searchKeys":["hasAnySibling","public final Unit hasAnySibling(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnySibling"]},{"name":"public final Unit hasClickAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasClickAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-click-action.html","searchKeys":["hasClickAction","public final Unit hasClickAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasClickAction"]},{"name":"public final Unit hasContentDescription(Integer resId, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasContentDescription","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-content-description.html","searchKeys":["hasContentDescription","public final Unit hasContentDescription(Integer resId, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasContentDescription"]},{"name":"public final Unit hasContentDescription(String value, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasContentDescription","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-content-description.html","searchKeys":["hasContentDescription","public final Unit hasContentDescription(String value, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasContentDescription"]},{"name":"public final Unit hasContentDescriptionExactly(Integer resIds)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasContentDescriptionExactly","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-content-description-exactly.html","searchKeys":["hasContentDescriptionExactly","public final Unit hasContentDescriptionExactly(Integer resIds)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasContentDescriptionExactly"]},{"name":"public final Unit hasContentDescriptionExactly(String values)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasContentDescriptionExactly","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-content-description-exactly.html","searchKeys":["hasContentDescriptionExactly","public final Unit hasContentDescriptionExactly(String values)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasContentDescriptionExactly"]},{"name":"public final Unit hasImeAction(ImeAction actionType)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasImeAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-ime-action.html","searchKeys":["hasImeAction","public final Unit hasImeAction(ImeAction actionType)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasImeAction"]},{"name":"public final Unit hasNoClickAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasNoClickAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-no-click-action.html","searchKeys":["hasNoClickAction","public final Unit hasNoClickAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasNoClickAction"]},{"name":"public final Unit hasNoScrollAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasNoScrollAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-no-scroll-action.html","searchKeys":["hasNoScrollAction","public final Unit hasNoScrollAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasNoScrollAction"]},{"name":"public final Unit hasParent(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasParent","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-parent.html","searchKeys":["hasParent","public final Unit hasParent(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasParent"]},{"name":"public final Unit hasPosition(Integer position)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasPosition","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-position.html","searchKeys":["hasPosition","public final Unit hasPosition(Integer position)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasPosition"]},{"name":"public final Unit hasProgressBarRangeInfo(ProgressBarRangeInfo rangeInfo)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasProgressBarRangeInfo","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-progress-bar-range-info.html","searchKeys":["hasProgressBarRangeInfo","public final Unit hasProgressBarRangeInfo(ProgressBarRangeInfo rangeInfo)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasProgressBarRangeInfo"]},{"name":"public final Unit hasScrollAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasScrollAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-scroll-action.html","searchKeys":["hasScrollAction","public final Unit hasScrollAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasScrollAction"]},{"name":"public final Unit hasScrollToIndexAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasScrollToIndexAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-scroll-to-index-action.html","searchKeys":["hasScrollToIndexAction","public final Unit hasScrollToIndexAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasScrollToIndexAction"]},{"name":"public final Unit hasScrollToKeyAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasScrollToKeyAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-scroll-to-key-action.html","searchKeys":["hasScrollToKeyAction","public final Unit hasScrollToKeyAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasScrollToKeyAction"]},{"name":"public final Unit hasSetTextAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasSetTextAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-set-text-action.html","searchKeys":["hasSetTextAction","public final Unit hasSetTextAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasSetTextAction"]},{"name":"public final Unit hasStateDescription(Integer resId)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasStateDescription","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-state-description.html","searchKeys":["hasStateDescription","public final Unit hasStateDescription(Integer resId)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasStateDescription"]},{"name":"public final Unit hasStateDescription(String value)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasStateDescription","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-state-description.html","searchKeys":["hasStateDescription","public final Unit hasStateDescription(String value)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasStateDescription"]},{"name":"public final Unit hasTestTag(Integer resId)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasTestTag","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-test-tag.html","searchKeys":["hasTestTag","public final Unit hasTestTag(Integer resId)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasTestTag"]},{"name":"public final Unit hasTestTag(String testTag)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasTestTag","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-test-tag.html","searchKeys":["hasTestTag","public final Unit hasTestTag(String testTag)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasTestTag"]},{"name":"public final Unit hasText(Integer resId, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasText","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-text.html","searchKeys":["hasText","public final Unit hasText(Integer resId, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasText"]},{"name":"public final Unit hasText(String text, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasText","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-text.html","searchKeys":["hasText","public final Unit hasText(String text, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasText"]},{"name":"public final Unit hasTextExactly(Integer resIds, Boolean includeEditableText)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasTextExactly","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-text-exactly.html","searchKeys":["hasTextExactly","public final Unit hasTextExactly(Integer resIds, Boolean includeEditableText)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasTextExactly"]},{"name":"public final Unit hasTextExactly(String textValues, Boolean includeEditableText)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasTextExactly","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-text-exactly.html","searchKeys":["hasTextExactly","public final Unit hasTextExactly(String textValues, Boolean includeEditableText)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasTextExactly"]},{"name":"public final Unit initSemantics(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode)","description":"io.github.kakaocup.compose.node.core.BaseNode.initSemantics","location":"compose/io.github.kakaocup.compose.node.core/-base-node/init-semantics.html","searchKeys":["initSemantics","public final Unit initSemantics(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode)","io.github.kakaocup.compose.node.core.BaseNode.initSemantics"]},{"name":"public final Unit intercept(Function1<Interceptor.Configurator, Unit> configurator)","description":"io.github.kakaocup.compose.KakaoCompose.intercept","location":"compose/io.github.kakaocup.compose/-kakao-compose/intercept.html","searchKeys":["intercept","public final Unit intercept(Function1<Interceptor.Configurator, Unit> configurator)","io.github.kakaocup.compose.KakaoCompose.intercept"]},{"name":"public final Unit invoke(Function1<KakaoCompose, Unit> function)","description":"io.github.kakaocup.compose.KakaoCompose.invoke","location":"compose/io.github.kakaocup.compose/-kakao-compose/invoke.html","searchKeys":["invoke","public final Unit invoke(Function1<KakaoCompose, Unit> function)","io.github.kakaocup.compose.KakaoCompose.invoke"]},{"name":"public final Unit isDialog()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isDialog","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-dialog.html","searchKeys":["isDialog","public final Unit isDialog()","io.github.kakaocup.compose.node.builder.ViewBuilder.isDialog"]},{"name":"public final Unit isEnabled()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isEnabled","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-enabled.html","searchKeys":["isEnabled","public final Unit isEnabled()","io.github.kakaocup.compose.node.builder.ViewBuilder.isEnabled"]},{"name":"public final Unit isFocusable()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isFocusable","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-focusable.html","searchKeys":["isFocusable","public final Unit isFocusable()","io.github.kakaocup.compose.node.builder.ViewBuilder.isFocusable"]},{"name":"public final Unit isFocused()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isFocused","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-focused.html","searchKeys":["isFocused","public final Unit isFocused()","io.github.kakaocup.compose.node.builder.ViewBuilder.isFocused"]},{"name":"public final Unit isHeading()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isHeading","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-heading.html","searchKeys":["isHeading","public final Unit isHeading()","io.github.kakaocup.compose.node.builder.ViewBuilder.isHeading"]},{"name":"public final Unit isNotEnabled()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isNotEnabled","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-not-enabled.html","searchKeys":["isNotEnabled","public final Unit isNotEnabled()","io.github.kakaocup.compose.node.builder.ViewBuilder.isNotEnabled"]},{"name":"public final Unit isNotFocusable()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isNotFocusable","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-not-focusable.html","searchKeys":["isNotFocusable","public final Unit isNotFocusable()","io.github.kakaocup.compose.node.builder.ViewBuilder.isNotFocusable"]},{"name":"public final Unit isNotFocused()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isNotFocused","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-not-focused.html","searchKeys":["isNotFocused","public final Unit isNotFocused()","io.github.kakaocup.compose.node.builder.ViewBuilder.isNotFocused"]},{"name":"public final Unit isNotSelected()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isNotSelected","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-not-selected.html","searchKeys":["isNotSelected","public final Unit isNotSelected()","io.github.kakaocup.compose.node.builder.ViewBuilder.isNotSelected"]},{"name":"public final Unit isOff()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isOff","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-off.html","searchKeys":["isOff","public final Unit isOff()","io.github.kakaocup.compose.node.builder.ViewBuilder.isOff"]},{"name":"public final Unit isOn()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isOn","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-on.html","searchKeys":["isOn","public final Unit isOn()","io.github.kakaocup.compose.node.builder.ViewBuilder.isOn"]},{"name":"public final Unit isPopup()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isPopup","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-popup.html","searchKeys":["isPopup","public final Unit isPopup()","io.github.kakaocup.compose.node.builder.ViewBuilder.isPopup"]},{"name":"public final Unit isRoot()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isRoot","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-root.html","searchKeys":["isRoot","public final Unit isRoot()","io.github.kakaocup.compose.node.builder.ViewBuilder.isRoot"]},{"name":"public final Unit isSelectable()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isSelectable","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-selectable.html","searchKeys":["isSelectable","public final Unit isSelectable()","io.github.kakaocup.compose.node.builder.ViewBuilder.isSelectable"]},{"name":"public final Unit isSelected()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isSelected","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-selected.html","searchKeys":["isSelected","public final Unit isSelected()","io.github.kakaocup.compose.node.builder.ViewBuilder.isSelected"]},{"name":"public final Unit isToggleable()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isToggleable","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-toggleable.html","searchKeys":["isToggleable","public final Unit isToggleable()","io.github.kakaocup.compose.node.builder.ViewBuilder.isToggleable"]},{"name":"public final Unit itemAt(Integer index, Boolean needPerformScroll, Function1<KListItemNode<?>, Unit> function)","description":"io.github.kakaocup.compose.node.element.list.KListNode.itemAt","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/item-at.html","searchKeys":["itemAt","public final Unit itemAt(Integer index, Boolean needPerformScroll, Function1<KListItemNode<?>, Unit> function)","io.github.kakaocup.compose.node.element.list.KListNode.itemAt"]},{"name":"public final Unit itemType<T extends KLazyListItemNode<?>>(Function2<SemanticsNode, SemanticsNodeInteractionsProvider, T> provideItem)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder.itemType","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-builder/item-type.html","searchKeys":["itemType","public final Unit itemType<T extends KLazyListItemNode<?>>(Function2<SemanticsNode, SemanticsNodeInteractionsProvider, T> provideItem)","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder.itemType"]},{"name":"public final Unit itemWith(Function1<ViewBuilder, Unit> viewBuilderAction, Boolean needPerformScroll, Function1<KListItemNode<?>, Unit> function)","description":"io.github.kakaocup.compose.node.element.list.KListNode.itemWith","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/item-with.html","searchKeys":["itemWith","public final Unit itemWith(Function1<ViewBuilder, Unit> viewBuilderAction, Boolean needPerformScroll, Function1<KListItemNode<?>, Unit> function)","io.github.kakaocup.compose.node.element.list.KListNode.itemWith"]},{"name":"public final Unit onAll(Boolean isOverride, Function1<INTERACTION, Unit> interceptor)","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Builder.onAll","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-builder/on-all.html","searchKeys":["onAll","public final Unit onAll(Boolean isOverride, Function1<INTERACTION, Unit> interceptor)","io.github.kakaocup.compose.intercept.base.Interceptor.Builder.onAll"]},{"name":"public final Unit onCheck(Boolean isOverride, Function2<INTERACTION, ASSERTION, Unit> interceptor)","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Builder.onCheck","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-builder/on-check.html","searchKeys":["onCheck","public final Unit onCheck(Boolean isOverride, Function2<INTERACTION, ASSERTION, Unit> interceptor)","io.github.kakaocup.compose.intercept.base.Interceptor.Builder.onCheck"]},{"name":"public final Unit onComposeInteraction(Function1<Interceptor.Builder<ComposeInteraction, ComposeAssertion, ComposeAction>, Unit> builder)","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Configurator.onComposeInteraction","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-configurator/on-compose-interaction.html","searchKeys":["onComposeInteraction","public final Unit onComposeInteraction(Function1<Interceptor.Builder<ComposeInteraction, ComposeAssertion, ComposeAction>, Unit> builder)","io.github.kakaocup.compose.intercept.base.Interceptor.Configurator.onComposeInteraction"]},{"name":"public final Unit onPerform(Boolean isOverride, Function2<INTERACTION, ACTION, Unit> interceptor)","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Builder.onPerform","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-builder/on-perform.html","searchKeys":["onPerform","public final Unit onPerform(Boolean isOverride, Function2<INTERACTION, ACTION, Unit> interceptor)","io.github.kakaocup.compose.intercept.base.Interceptor.Builder.onPerform"]},{"name":"public final Unit perform(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.perform","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/perform.html","searchKeys":["perform","public final Unit perform(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.perform"]},{"name":"public final Unit reFindNode()","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.reFindNode","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/re-find-node.html","searchKeys":["reFindNode","public final Unit reFindNode()","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.reFindNode"]},{"name":"public final Unit reset()","description":"io.github.kakaocup.compose.KakaoCompose.reset","location":"compose/io.github.kakaocup.compose/-kakao-compose/reset.html","searchKeys":["reset","public final Unit reset()","io.github.kakaocup.compose.KakaoCompose.reset"]},{"name":"public final Unit setCurrentInterceptor(Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> currentInterceptor)","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.setCurrentInterceptor","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/set-current-interceptor.html","searchKeys":["setCurrentInterceptor","public final Unit setCurrentInterceptor(Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> currentInterceptor)","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.setCurrentInterceptor"]},{"name":"public final Unit setSemanticsProvider(SemanticsNodeInteractionsProvider semanticsProvider)","description":"io.github.kakaocup.compose.KakaoCompose.Global.setSemanticsProvider","location":"compose/io.github.kakaocup.compose/-kakao-compose/-global/set-semantics-provider.html","searchKeys":["setSemanticsProvider","public final Unit setSemanticsProvider(SemanticsNodeInteractionsProvider semanticsProvider)","io.github.kakaocup.compose.KakaoCompose.Global.setSemanticsProvider"]},{"name":"public final Unit setUseUnmergedTree(Boolean useUnmergedTree)","description":"io.github.kakaocup.compose.KakaoCompose.Override.setUseUnmergedTree","location":"compose/io.github.kakaocup.compose/-kakao-compose/-override/set-use-unmerged-tree.html","searchKeys":["setUseUnmergedTree","public final Unit setUseUnmergedTree(Boolean useUnmergedTree)","io.github.kakaocup.compose.KakaoCompose.Override.setUseUnmergedTree"]},{"name":"public final Unit setUseUnmergedTree(Boolean useUnmergedTree)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.setUseUnmergedTree","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/set-use-unmerged-tree.html","searchKeys":["setUseUnmergedTree","public final Unit setUseUnmergedTree(Boolean useUnmergedTree)","io.github.kakaocup.compose.node.builder.ViewBuilder.setUseUnmergedTree"]},{"name":"public final class Builder<INTERACTION extends Object, ASSERTION extends Object, ACTION extends Object>","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Builder","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-builder/index.html","searchKeys":["Builder","public final class Builder<INTERACTION extends Object, ASSERTION extends Object, ACTION extends Object>","io.github.kakaocup.compose.intercept.base.Interceptor.Builder"]},{"name":"public final class ComposeDelegate implements Delegate<ComposeInteraction, ComposeAssertion, ComposeAction>","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/index.html","searchKeys":["ComposeDelegate","public final class ComposeDelegate implements Delegate<ComposeInteraction, ComposeAssertion, ComposeAction>","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate"]},{"name":"public final class ComposeInteraction implements Interaction<ComposeAssertion, ComposeAction>","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/index.html","searchKeys":["ComposeInteraction","public final class ComposeInteraction implements Interaction<ComposeAssertion, ComposeAction>","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction"]},{"name":"public final class ComposeOperationImplsKt","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperationImplsKt","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation-impls-kt/index.html","searchKeys":["ComposeOperationImplsKt","public final class ComposeOperationImplsKt","io.github.kakaocup.compose.intercept.operation.ComposeOperationImplsKt"]},{"name":"public final class Configuration","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Configuration","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-configuration/index.html","searchKeys":["Configuration","public final class Configuration","io.github.kakaocup.compose.intercept.base.Interceptor.Configuration"]},{"name":"public final class Configurator","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Configurator","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-configurator/index.html","searchKeys":["Configurator","public final class Configurator","io.github.kakaocup.compose.intercept.base.Interceptor.Configurator"]},{"name":"public final class ContextUtilsKt","description":"io.github.kakaocup.compose.utilities.ContextUtilsKt","location":"compose/io.github.kakaocup.compose.utilities/-context-utils-kt/index.html","searchKeys":["ContextUtilsKt","public final class ContextUtilsKt","io.github.kakaocup.compose.utilities.ContextUtilsKt"]},{"name":"public final class ExtensionsKt","description":"io.github.kakaocup.compose.utilities.ExtensionsKt","location":"compose/io.github.kakaocup.compose.utilities/-extensions-kt/index.html","searchKeys":["ExtensionsKt","public final class ExtensionsKt","io.github.kakaocup.compose.utilities.ExtensionsKt"]},{"name":"public final class Interception<T extends Object>","description":"io.github.kakaocup.compose.intercept.base.Interception","location":"compose/io.github.kakaocup.compose.intercept.base/-interception/index.html","searchKeys":["Interception","public final class Interception<T extends Object>","io.github.kakaocup.compose.intercept.base.Interception"]},{"name":"public final class Interceptor<INTERACTION extends Object, ASSERTION extends Object, ACTION extends Object>","description":"io.github.kakaocup.compose.intercept.base.Interceptor","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/index.html","searchKeys":["Interceptor","public final class Interceptor<INTERACTION extends Object, ASSERTION extends Object, ACTION extends Object>","io.github.kakaocup.compose.intercept.base.Interceptor"]},{"name":"public final class KLazyListItemBuilder","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-builder/index.html","searchKeys":["KLazyListItemBuilder","public final class KLazyListItemBuilder","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder"]},{"name":"public final class KLazyListNode extends BaseNode<KLazyListNode> implements LazyListNodeAssertions","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/index.html","searchKeys":["KLazyListNode","public final class KLazyListNode extends BaseNode<KLazyListNode> implements LazyListNodeAssertions","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode"]},{"name":"public final class KListItemType<T extends KLazyListItemNode<?>>","description":"io.github.kakaocup.compose.node.element.lazylist.KListItemType","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-list-item-type/index.html","searchKeys":["KListItemType","public final class KListItemType<T extends KLazyListItemNode<?>>","io.github.kakaocup.compose.node.element.lazylist.KListItemType"]},{"name":"public final class KListNode extends BaseNode<KListNode> implements ListNodeAssertions","description":"io.github.kakaocup.compose.node.element.list.KListNode","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node/index.html","searchKeys":["KListNode","public final class KListNode extends BaseNode<KListNode> implements ListNodeAssertions","io.github.kakaocup.compose.node.element.list.KListNode"]},{"name":"public final class KListNodeKt","description":"io.github.kakaocup.compose.node.element.list.KListNodeKt","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node-kt/index.html","searchKeys":["KListNodeKt","public final class KListNodeKt","io.github.kakaocup.compose.node.element.list.KListNodeKt"]},{"name":"public final class KakaoComposeException extends Exception","description":"io.github.kakaocup.compose.exception.KakaoComposeException","location":"compose/io.github.kakaocup.compose.exception/-kakao-compose-exception/index.html","searchKeys":["KakaoComposeException","public final class KakaoComposeException extends Exception","io.github.kakaocup.compose.exception.KakaoComposeException"]},{"name":"public final class KakaoComposeTestRule implements TestRule","description":"io.github.kakaocup.compose.rule.KakaoComposeTestRule","location":"compose/io.github.kakaocup.compose.rule/-kakao-compose-test-rule/index.html","searchKeys":["KakaoComposeTestRule","public final class KakaoComposeTestRule implements TestRule","io.github.kakaocup.compose.rule.KakaoComposeTestRule"]},{"name":"public final class LazyListItemProvisionException extends Exception","description":"io.github.kakaocup.compose.node.element.lazylist.LazyListItemProvisionException","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-lazy-list-item-provision-exception/index.html","searchKeys":["LazyListItemProvisionException","public final class LazyListItemProvisionException extends Exception","io.github.kakaocup.compose.node.element.lazylist.LazyListItemProvisionException"]},{"name":"public final class NodeMatcher","description":"io.github.kakaocup.compose.node.builder.NodeMatcher","location":"compose/io.github.kakaocup.compose.node.builder/-node-matcher/index.html","searchKeys":["NodeMatcher","public final class NodeMatcher","io.github.kakaocup.compose.node.builder.NodeMatcher"]},{"name":"public final class NodeProvider","description":"io.github.kakaocup.compose.node.builder.NodeProvider","location":"compose/io.github.kakaocup.compose.node.builder/-node-provider/index.html","searchKeys":["NodeProvider","public final class NodeProvider","io.github.kakaocup.compose.node.builder.NodeProvider"]},{"name":"public final class ViewBuilder","description":"io.github.kakaocup.compose.node.builder.ViewBuilder","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/index.html","searchKeys":["ViewBuilder","public final class ViewBuilder","io.github.kakaocup.compose.node.builder.ViewBuilder"]},{"name":"public final static ComposeAction produceComposeAction(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperationImplsKt.produceComposeAction","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation-impls-kt/produce-compose-action.html","searchKeys":["produceComposeAction","public final static ComposeAction produceComposeAction(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","io.github.kakaocup.compose.intercept.operation.ComposeOperationImplsKt.produceComposeAction"]},{"name":"public final static ComposeAssertion produceComposeAssertion(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperationImplsKt.produceComposeAssertion","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation-impls-kt/produce-compose-assertion.html","searchKeys":["produceComposeAssertion","public final static ComposeAssertion produceComposeAssertion(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","io.github.kakaocup.compose.intercept.operation.ComposeOperationImplsKt.produceComposeAssertion"]},{"name":"public final static KListNode KListNode(BaseNode<?> $self, Boolean useUnmergedTree, Boolean isScrollable, SemanticsPropertyKey<Integer> itemIndexSemanticsPropertyKey, SemanticsPropertyKey<Integer> lengthSemanticsPropertyKey, Function1<ViewBuilder, Unit> viewBuilderAction)","description":"io.github.kakaocup.compose.node.element.list.KListNodeKt.KListNode","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node-kt/-k-list-node.html","searchKeys":["KListNode","public final static KListNode KListNode(BaseNode<?> $self, Boolean useUnmergedTree, Boolean isScrollable, SemanticsPropertyKey<Integer> itemIndexSemanticsPropertyKey, SemanticsPropertyKey<Integer> lengthSemanticsPropertyKey, Function1<ViewBuilder, Unit> viewBuilderAction)","io.github.kakaocup.compose.node.element.list.KListNodeKt.KListNode"]},{"name":"public final static KListNode KListNode(BaseNode<?> $self, String testTag, Boolean useUnmergedTree, Boolean isScrollable, SemanticsPropertyKey<Integer> itemIndexSemanticsPropertyKey, SemanticsPropertyKey<Integer> lengthSemanticsPropertyKey)","description":"io.github.kakaocup.compose.node.element.list.KListNodeKt.KListNode","location":"compose/io.github.kakaocup.compose.node.element.list/-k-list-node-kt/-k-list-node.html","searchKeys":["KListNode","public final static KListNode KListNode(BaseNode<?> $self, String testTag, Boolean useUnmergedTree, Boolean isScrollable, SemanticsPropertyKey<Integer> itemIndexSemanticsPropertyKey, SemanticsPropertyKey<Integer> lengthSemanticsPropertyKey)","io.github.kakaocup.compose.node.element.list.KListNodeKt.KListNode"]},{"name":"public final static NodeMatcher checkNotNull(NodeMatcher $self)","description":"io.github.kakaocup.compose.utilities.ExtensionsKt.checkNotNull","location":"compose/io.github.kakaocup.compose.utilities/-extensions-kt/check-not-null.html","searchKeys":["checkNotNull","public final static NodeMatcher checkNotNull(NodeMatcher $self)","io.github.kakaocup.compose.utilities.ExtensionsKt.checkNotNull"]},{"name":"public final static SemanticsNodeInteractionsProvider checkNotNull(SemanticsNodeInteractionsProvider $self)","description":"io.github.kakaocup.compose.utilities.ExtensionsKt.checkNotNull","location":"compose/io.github.kakaocup.compose.utilities/-extensions-kt/check-not-null.html","searchKeys":["checkNotNull","public final static SemanticsNodeInteractionsProvider checkNotNull(SemanticsNodeInteractionsProvider $self)","io.github.kakaocup.compose.utilities.ExtensionsKt.checkNotNull"]},{"name":"public final static SemanticsNodeInteractionsProvider orGlobal(SemanticsNodeInteractionsProvider $self)","description":"io.github.kakaocup.compose.utilities.ExtensionsKt.orGlobal","location":"compose/io.github.kakaocup.compose.utilities/-extensions-kt/or-global.html","searchKeys":["orGlobal","public final static SemanticsNodeInteractionsProvider orGlobal(SemanticsNodeInteractionsProvider $self)","io.github.kakaocup.compose.utilities.ExtensionsKt.orGlobal"]},{"name":"public final static String getResourceString(Integer resId)","description":"io.github.kakaocup.compose.utilities.ContextUtilsKt.getResourceString","location":"compose/io.github.kakaocup.compose.utilities/-context-utils-kt/get-resource-string.html","searchKeys":["getResourceString","public final static String getResourceString(Integer resId)","io.github.kakaocup.compose.utilities.ContextUtilsKt.getResourceString"]},{"name":"public interface ComposeAction implements ComposeOperation<SemanticsNodeInteraction>","description":"io.github.kakaocup.compose.intercept.operation.ComposeAction","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-action/index.html","searchKeys":["ComposeAction","public interface ComposeAction implements ComposeOperation<SemanticsNodeInteraction>","io.github.kakaocup.compose.intercept.operation.ComposeAction"]},{"name":"public interface ComposeAssertion implements ComposeOperation<SemanticsNodeInteraction>","description":"io.github.kakaocup.compose.intercept.operation.ComposeAssertion","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-assertion/index.html","searchKeys":["ComposeAssertion","public interface ComposeAssertion implements ComposeOperation<SemanticsNodeInteraction>","io.github.kakaocup.compose.intercept.operation.ComposeAssertion"]},{"name":"public interface ComposeInterceptable","description":"io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-interceptable/index.html","searchKeys":["ComposeInterceptable","public interface ComposeInterceptable","io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable"]},{"name":"public interface ComposeOperation<View extends Object>","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperation","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation/index.html","searchKeys":["ComposeOperation","public interface ComposeOperation<View extends Object>","io.github.kakaocup.compose.intercept.operation.ComposeOperation"]},{"name":"public interface ComposeOperationType","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperationType","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation-type/index.html","searchKeys":["ComposeOperationType","public interface ComposeOperationType","io.github.kakaocup.compose.intercept.operation.ComposeOperationType"]},{"name":"public interface Delegate<INTERACTION extends Interaction<ASSERTION, ACTION>, ASSERTION extends Object, ACTION extends Object> implements Interaction<ASSERTION, ACTION>","description":"io.github.kakaocup.compose.intercept.delegate.Delegate","location":"compose/io.github.kakaocup.compose.intercept.delegate/-delegate/index.html","searchKeys":["Delegate","public interface Delegate<INTERACTION extends Interaction<ASSERTION, ACTION>, ASSERTION extends Object, ACTION extends Object> implements Interaction<ASSERTION, ACTION>","io.github.kakaocup.compose.intercept.delegate.Delegate"]},{"name":"public interface ImageContentAssertions implements NodeAssertions","description":"io.github.kakaocup.compose.node.assertion.ImageContentAssertions","location":"compose/io.github.kakaocup.compose.node.assertion/-image-content-assertions/index.html","searchKeys":["ImageContentAssertions","public interface ImageContentAssertions implements NodeAssertions","io.github.kakaocup.compose.node.assertion.ImageContentAssertions"]},{"name":"public interface Interaction<ASSERTION extends Object, ACTION extends Object>","description":"io.github.kakaocup.compose.intercept.interaction.Interaction","location":"compose/io.github.kakaocup.compose.intercept.interaction/-interaction/index.html","searchKeys":["Interaction","public interface Interaction<ASSERTION extends Object, ACTION extends Object>","io.github.kakaocup.compose.intercept.interaction.Interaction"]},{"name":"public interface KDSL<T extends Object>","description":"io.github.kakaocup.compose.node.core.KDSL","location":"compose/io.github.kakaocup.compose.node.core/-k-d-s-l/index.html","searchKeys":["KDSL","public interface KDSL<T extends Object>","io.github.kakaocup.compose.node.core.KDSL"]},{"name":"public interface LazyListNodeAssertions implements NodeAssertions","description":"io.github.kakaocup.compose.node.assertion.LazyListNodeAssertions","location":"compose/io.github.kakaocup.compose.node.assertion/-lazy-list-node-assertions/index.html","searchKeys":["LazyListNodeAssertions","public interface LazyListNodeAssertions implements NodeAssertions","io.github.kakaocup.compose.node.assertion.LazyListNodeAssertions"]},{"name":"public interface ListNodeAssertions implements NodeAssertions","description":"io.github.kakaocup.compose.node.assertion.ListNodeAssertions","location":"compose/io.github.kakaocup.compose.node.assertion/-list-node-assertions/index.html","searchKeys":["ListNodeAssertions","public interface ListNodeAssertions implements NodeAssertions","io.github.kakaocup.compose.node.assertion.ListNodeAssertions"]},{"name":"public interface NodeActions","description":"io.github.kakaocup.compose.node.action.NodeActions","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/index.html","searchKeys":["NodeActions","public interface NodeActions","io.github.kakaocup.compose.node.action.NodeActions"]},{"name":"public interface NodeAssertions","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/index.html","searchKeys":["NodeAssertions","public interface NodeAssertions","io.github.kakaocup.compose.node.assertion.NodeAssertions"]},{"name":"public interface TextActions","description":"io.github.kakaocup.compose.node.action.TextActions","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/index.html","searchKeys":["TextActions","public interface TextActions","io.github.kakaocup.compose.node.action.TextActions"]},{"name":"public interface TextColorAssertions implements NodeAssertions","description":"io.github.kakaocup.compose.node.assertion.TextColorAssertions","location":"compose/io.github.kakaocup.compose.node.assertion/-text-color-assertions/index.html","searchKeys":["TextColorAssertions","public interface TextColorAssertions implements NodeAssertions","io.github.kakaocup.compose.node.assertion.TextColorAssertions"]},{"name":"public interface TextResourcesNodeAssertions implements NodeAssertions","description":"io.github.kakaocup.compose.node.assertion.TextResourcesNodeAssertions","location":"compose/io.github.kakaocup.compose.node.assertion/-text-resources-node-assertions/index.html","searchKeys":["TextResourcesNodeAssertions","public interface TextResourcesNodeAssertions implements NodeAssertions","io.github.kakaocup.compose.node.assertion.TextResourcesNodeAssertions"]},{"name":"public interface TintColorAssertions implements NodeAssertions","description":"io.github.kakaocup.compose.node.assertion.TintColorAssertions","location":"compose/io.github.kakaocup.compose.node.assertion/-tint-color-assertions/index.html","searchKeys":["TintColorAssertions","public interface TintColorAssertions implements NodeAssertions","io.github.kakaocup.compose.node.assertion.TintColorAssertions"]}]
