"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[976],{619:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var s=n(4848),t=n(8453);const i={sidebar_position:1},c=void 0,r={id:"intro",title:"intro",description:"Welcome to Kakao Compose tutorial. Let's make UI testing easies and simple. In this documentation we will try to explain functionality of Kakao Compose and",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/Compose/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Basics",permalink:"/Compose/docs/category/basics"}},a={},d=[{value:"Overview",id:"overview",level:3}];function l(e){const o={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(o.p,{children:["Welcome to ",(0,s.jsx)(o.strong,{children:"Kakao Compose"})," tutorial. Let's make UI testing easies and simple. In this documentation we will try to explain functionality of Kakao Compose and\nfundamental concepts of implementation, modules and responsibility of each, how to add this library to your project and\nhow to start works on UI test step by step."]}),"\n",(0,s.jsxs)(o.p,{children:["But before we started, don't forget that ",(0,s.jsx)(o.code,{children:"KakaoCup"})," is fully Open Source and supported by community.\nPlease don't hesitate to contribute to this documentation or fix any bugs.\nWe always welcome to new contributors with any level of codding skills."]}),"\n",(0,s.jsx)(o.h3,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(o.p,{children:["From version ",(0,s.jsx)(o.code,{children:"1.0.0"})," Kakao Compose contains four main modules, with following dependencies"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-mermaid",children:"flowchart TD\n    Test(compose-test)\n    Compose(compose)\n    UI(compose-ui)\n    Semantics(compose-semantics)\n    Test --\x3e Compose\n    UI --\x3e Semantics\n    Test --\x3e Semantics\n"})}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"compose"})," - Core module, which providing DSL wrapping for Espresso methods,\nScreens page objects and ",(0,s.jsx)(o.code,{children:"LazyList"})," support"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"compose-semantics"})," - Set of default semantics keys, what can be used by ",(0,s.jsx)(o.code,{children:"compose-ui"})," and ",(0,s.jsx)(o.code,{children:"compose-test"})," modules"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"compose-ui"})," - Wrapped over Compose base components, with the same constructors signatures.\nThose wrappers will set all possible semantics from ",(0,s.jsx)(o.code,{children:"compose-semantics"})," module, which can be used by ",(0,s.jsx)(o.code,{children:"compose-test"})," module"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"compose-test"})," - Providing nodes for typed component validation"]}),"\n"]})]})}function p(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>c,x:()=>r});var s=n(6540);const t={},i=s.createContext(t);function c(e){const o=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:o},e.children)}}}]);