"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5732],{1173:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>t,metadata:()=>r,toc:()=>a});var n=s(4848),i=s(8453);const t={sidebar_position:3},c="Structure",r={id:"basics/kakao_compose_structure",title:"Structure",description:"Overview",source:"@site/docs/basics/kakao_compose_structure.md",sourceDirName:"basics",slug:"/basics/kakao_compose_structure",permalink:"/Compose/docs/basics/kakao_compose_structure",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Kakao Compose Test Rule",permalink:"/Compose/docs/basics/kakao_test_rule"},next:{title:"Intermediate",permalink:"/Compose/docs/category/intermediate"}},d={},a=[{value:"<strong>Overview</strong>",id:"overview",level:3},{value:"<strong>Core</strong>",id:"core",level:3},{value:"<strong>Optional</strong>",id:"optional",level:3},{value:"<code>compose-semantics</code>",id:"compose-semantics",level:4},{value:"<code>compose-ui</code>",id:"compose-ui",level:4},{value:"<code>compose-test</code>",id:"compose-test",level:4}];function p(e){const o={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.header,{children:(0,n.jsx)(o.h1,{id:"structure",children:"Structure"})}),"\n",(0,n.jsx)(o.h3,{id:"overview",children:(0,n.jsx)(o.strong,{children:"Overview"})}),"\n",(0,n.jsxs)(o.p,{children:["From version ",(0,n.jsx)(o.code,{children:"1.0.0"})," Kakao Compose contains four main modules, with following dependencies"]}),"\n",(0,n.jsx)(o.mermaid,{value:"flowchart TD\n    Test(compose-test)\n    Compose(compose)\n    UI(compose-ui)\n    Semantics(compose-semantics)\n    Test --\x3e Compose\n    UI --\x3e Semantics\n    Test --\x3e Semantics"}),"\n",(0,n.jsx)(o.h3,{id:"core",children:(0,n.jsx)(o.strong,{children:"Core"})}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"compose"})," - Core module, which providing DSL wrapping for Espresso methods, ",(0,n.jsx)(o.code,{children:"ComposeScreen"})," page objects and ",(0,n.jsx)(o.code,{children:"KNode"})," and list support. Version 1+ is mostly compatible with version 0+ and required minimum effort for migration."]}),"\n"]}),"\n",(0,n.jsxs)(o.p,{children:["Can be added ",(0,n.jsx)(o.code,{children:'implementation("io.github.kakaocup:compose:1.0.0")'})]}),"\n",(0,n.jsx)(o.h3,{id:"optional",children:(0,n.jsx)(o.strong,{children:"Optional"})}),"\n",(0,n.jsxs)(o.p,{children:["UI testing presents distinct approaches for XML and Compose implementations. A core concept in Compose is the use of Nodes, which are not type-based.\nThis introduces certain limitations in UI test development, such as the inability to perform type checks on views. The only way to retrieve states from a view is through ",(0,n.jsx)(o.code,{children:"Semantic"}),' providers.\nIn the Kakao Compose version, we identified an issue where developers attempted to add custom semantics to the core library, which detracted from its role as a "pure Espresso wrapper."\nTo address this, we opted for an extension libraries approach instead.']}),"\n",(0,n.jsx)(o.h4,{id:"compose-semantics",children:(0,n.jsx)(o.code,{children:"compose-semantics"})}),"\n",(0,n.jsxs)(o.p,{children:["Set of default semantics keys, what can be used by ",(0,n.jsx)(o.code,{children:"compose-ui"})," and ",(0,n.jsx)(o.code,{children:"compose-test"})," modules. This module is very lightweight and contains only set of semantics which used in ",(0,n.jsx)(o.code,{children:"compose-test"})," to identify state of the view.\nNeed to be added explicitly only in case of having design system and avoiding direct dependency on ",(0,n.jsx)(o.code,{children:"compose-ui"})]}),"\n",(0,n.jsxs)(o.p,{children:["Can be added ",(0,n.jsx)(o.code,{children:'implementation("io.github.kakaocup:compose-semantics:1.0.0")'})]}),"\n",(0,n.jsx)(o.admonition,{title:"If you have a design system in your project",type:"tip",children:(0,n.jsxs)(o.p,{children:["You can add all required parameters to your design system based matching from ",(0,n.jsx)(o.a,{href:"https://github.com/KakaoCup/Compose/tree/master/compose-ui/src/main/kotlin/io/github/kakaocup/compose/foundation",children:"compose-ui"})," to avoid transitive dependency on Compose via Kakao"]})}),"\n",(0,n.jsx)(o.h4,{id:"compose-ui",children:(0,n.jsx)(o.code,{children:"compose-ui"})}),"\n",(0,n.jsxs)(o.p,{children:["Wrapped over Compose base components, with the same constructors declaration.\nThose wrappers will set all possible semantics from ",(0,n.jsx)(o.code,{children:"compose-semantics"})," module, which can be used by ",(0,n.jsx)(o.code,{children:"compose-test"})," module. This module is for quick adding type based checks into your application"]}),"\n",(0,n.jsx)(o.admonition,{title:"Compose transitive dependency",type:"warning",children:(0,n.jsx)(o.p,{children:"By adding this module it will create non-directive dependency on project compose version. And your compose components can be out date, however we will try to release a new version in case of Compose version update."})}),"\n",(0,n.jsxs)(o.p,{children:["To avoid transitive dependency via Kakao Compose you may just copy source code of ",(0,n.jsx)(o.code,{children:"compose-ui"})," into your project and add dependency just to ",(0,n.jsx)(o.code,{children:"compose-semantics"})]}),"\n",(0,n.jsxs)(o.p,{children:["Can be add ",(0,n.jsx)(o.code,{children:'implementation("io.github.kakaocup:compose-ui:1.0.0")'})]}),"\n",(0,n.jsx)(o.h4,{id:"compose-test",children:(0,n.jsx)(o.code,{children:"compose-test"})}),"\n",(0,n.jsxs)(o.p,{children:["Providing nodes for typed component validation such as ",(0,n.jsx)(o.code,{children:"KButtonNode"}),", ",(0,n.jsx)(o.code,{children:"KIconNode"}),", ",(0,n.jsx)(o.code,{children:"KProgresBar"})," and etc."]}),"\n",(0,n.jsxs)(o.p,{children:["Can be added ",(0,n.jsx)(o.code,{children:'testImplementation("io.github.kakaocup:compose-test:1.0.0")'})]}),"\n",(0,n.jsxs)(o.p,{children:["Examples of usage can be found in ",(0,n.jsx)(o.a,{href:"https://github.com/KakaoCup/Compose/tree/master/sample/src/androidTest/java/io/github/kakaocup/compose/test/node",children:"Sample project"})]})]})}function l(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8453:(e,o,s)=>{s.d(o,{R:()=>c,x:()=>r});var n=s(6540);const i={},t=n.createContext(i);function c(e){const o=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(t.Provider,{value:o},e.children)}}}]);